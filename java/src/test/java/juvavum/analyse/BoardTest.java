package juvavum.analyse;

import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;

import juvavum.graph.SimpleEdge;
import org.jgrapht.Graph;
import org.jgrapht.graph.SimpleGraph;
import org.junit.jupiter.api.Test;

public class BoardTest {

  @Test
  public void testEquals() {
    int val = (int) (Math.random() * 510) + 1;
    assertTrue(new Board(3, 3, val).equals(new Board(3, 3, val)));
    assertFalse(new Board(3, 3, val).equals(new Board(3, 3, val - 1)));
  }

  @Test
  public void testHashcode() {
    int val = (int) (Math.random() * 510) + 1;
    assertEquals(new Board(3, 3, val).hashCode(), val);
  }

  @Test
  public void testToString() {
    assertEquals(new Board(3, 3, 28).toString(), "- - X \nX X - \n- - - \n");
    assertEquals(new Board(3, 3, 0).toString(), "- - - \n- - - \n- - - \n");
    assertEquals(new Board(1, 1, 1).toString(), "X \n");
    assertEquals(
        new Board(4, 5, 97625).toString(), "X - - X X \n- X - X - \nX X X X X \n- X - - - \n");
  }

  @Test
  public void testRotate90() {
    assertEquals(new Board(2, 2, 2), new Board(2, 2, 1).rotate90());
    assertEquals(new Board(3, 3, 4), new Board(3, 3, 1).rotate90());
    assertEquals(new Board(5, 5, 16), new Board(5, 5, 1).rotate90());
    assertEquals(new Board(6, 6, 32), new Board(6, 6, 1).rotate90());
    assertEquals(new Board(7, 7, 64), new Board(7, 7, 1).rotate90());
    assertEquals(new Board(7, 7, 64), new Board(7, 7, 1).rotate90());
    assertEquals(new Board(7, 7, 388698986582028L), new Board(7, 7, 1497174360).rotate90());
    assertEquals(new Board(3, 3, 274), new Board(3, 3, 28).rotate90());
    assertEquals(new Board(5, 5, 26559401), new Board(5, 5, 20188022).rotate90());
    assertEquals(new Board(2, 2, 5), new Board(2, 2, 12).rotate90());
    assertEquals(new Board(6, 6, 24193477911L), new Board(6, 6, 2106329558).rotate90());
    assertEquals(new Board(5, 5, 1164951), new Board(5, 5, 30706695).rotate90());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).rotate90());
    assertEquals(new Board(3, 3, 418), new Board(3, 3, 46).rotate90());
    assertEquals(new Board(3, 3, 130), new Board(3, 3, 40).rotate90());
    assertEquals(new Board(2, 2, 12), new Board(2, 2, 10).rotate90());
    assertEquals(new Board(3, 3, 223), new Board(3, 3, 505).rotate90());
    assertEquals(new Board(5, 5, 18953066), new Board(5, 5, 2986226).rotate90());
    assertEquals(new Board(2, 2, 14), new Board(2, 2, 11).rotate90());
    assertEquals(new Board(4, 4, 40404), new Board(4, 4, 57470).rotate90());
    assertEquals(new Board(7, 7, 283706464800360L), new Board(7, 7, 602377977).rotate90());
    assertEquals(new Board(5, 5, 18075496), new Board(5, 5, 31924342).rotate90());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).rotate90());
    assertEquals(new Board(2, 2, 2), new Board(2, 2, 1).rotate90());
    assertEquals(new Board(5, 5, 20582778), new Board(5, 5, 19509369).rotate90());
    assertEquals(new Board(6, 6, 9064116148L), new Board(6, 6, 106899399).rotate90());
    assertEquals(new Board(6, 6, 56276175037L), new Board(6, 6, 1387601511).rotate90());
    assertEquals(new Board(7, 7, 461520107545696L), new Board(7, 7, 1279931623).rotate90());
    assertEquals(new Board(6, 6, 11317823906L), new Board(6, 6, 993656859).rotate90());
    assertEquals(new Board(5, 5, 16418627), new Board(5, 5, 31056458).rotate90());
    assertEquals(new Board(5, 5, 4679294), new Board(5, 5, 6677927).rotate90());
    assertEquals(new Board(4, 4, 33927), new Board(4, 4, 4442).rotate90());
    assertEquals(new Board(2, 2, 3), new Board(2, 2, 5).rotate90());
    assertEquals(new Board(3, 3, 291), new Board(3, 3, 78).rotate90());
    assertEquals(new Board(5, 5, 11714449), new Board(5, 5, 31079107).rotate90());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).rotate90());
    assertEquals(new Board(6, 6, 21522221097L), new Board(6, 6, 1352669967).rotate90());
    assertEquals(new Board(5, 5, 20270166), new Board(5, 5, 21988629).rotate90());
    assertEquals(new Board(6, 6, 26041590320L), new Board(6, 6, 69381445).rotate90());
    assertEquals(new Board(7, 7, 108306341640300L), new Board(7, 7, 1497203115).rotate90());
    assertEquals(new Board(2, 2, 6), new Board(2, 2, 9).rotate90());
    assertEquals(new Board(2, 2, 3), new Board(2, 2, 5).rotate90());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).rotate90());
    assertEquals(new Board(5, 5, 10004173), new Board(5, 5, 30477994).rotate90());
    assertEquals(new Board(2, 2, 1), new Board(2, 2, 4).rotate90());
    assertEquals(new Board(2, 2, 7), new Board(2, 2, 13).rotate90());
    assertEquals(new Board(7, 7, 354070913228888L), new Board(7, 7, 62016635).rotate90());
    assertEquals(new Board(2, 2, 2), new Board(2, 2, 1).rotate90());
    assertEquals(new Board(5, 5, 27286376), new Board(5, 5, 2822774).rotate90());
    assertEquals(new Board(7, 7, 1673058722308L), new Board(7, 7, 848171038).rotate90());
    assertEquals(new Board(4, 4, 40679), new Board(4, 4, 38782).rotate90());
    assertEquals(new Board(2, 2, 7), new Board(2, 2, 13).rotate90());
    assertEquals(new Board(7, 7, 176776777043480L), new Board(7, 7, 762113048).rotate90());
    assertEquals(new Board(6, 6, 61149283712L), new Board(6, 6, 172691128).rotate90());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).rotate90());
    assertEquals(new Board(3, 3, 296), new Board(3, 3, 134).rotate90());
    assertEquals(new Board(4, 4, 20223), new Board(4, 4, 14327).rotate90());
    assertEquals(new Board(3, 3, 380), new Board(3, 3, 407).rotate90());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).rotate90());
    assertEquals(new Board(5, 5, 16101775), new Board(5, 5, 27058144).rotate90());
    assertEquals(new Board(6, 6, 32897687968L), new Board(6, 6, 784026141).rotate90());
    assertEquals(new Board(6, 6, 41007836085L), new Board(6, 6, 1725784931).rotate90());
    assertEquals(new Board(4, 4, 14897), new Board(4, 4, 48644).rotate90());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).rotate90());
    assertEquals(new Board(3, 3, 344), new Board(3, 3, 404).rotate90());
    assertEquals(new Board(3, 3, 499), new Board(3, 3, 382).rotate90());
    assertEquals(new Board(6, 6, 13529827747L), new Board(6, 6, 1408942611).rotate90());
    assertEquals(new Board(4, 4, 46612), new Board(4, 4, 44120).rotate90());
    assertEquals(new Board(3, 3, 315), new Board(3, 3, 222).rotate90());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).rotate90());
    assertEquals(new Board(2, 2, 6), new Board(2, 2, 9).rotate90());
    assertEquals(new Board(3, 3, 320), new Board(3, 3, 260).rotate90());
    assertEquals(new Board(6, 6, 64468610465L), new Board(6, 6, 1452984491).rotate90());
    assertEquals(new Board(4, 4, 61593), new Board(4, 4, 47243).rotate90());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).rotate90());
    assertEquals(new Board(3, 3, 460), new Board(3, 3, 421).rotate90());
    assertEquals(new Board(3, 3, 381), new Board(3, 3, 471).rotate90());
    assertEquals(new Board(3, 3, 132), new Board(3, 3, 33).rotate90());
    assertEquals(new Board(3, 3, 355), new Board(3, 3, 334).rotate90());
    assertEquals(new Board(7, 7, 283407864761348L), new Board(7, 7, 1439210060).rotate90());
    assertEquals(new Board(5, 5, 26644482), new Board(5, 5, 25211664).rotate90());
    assertEquals(new Board(2, 2, 4), new Board(2, 2, 8).rotate90());
    assertEquals(new Board(2, 2, 12), new Board(2, 2, 10).rotate90());
    assertEquals(new Board(7, 7, 284228118651004L), new Board(7, 7, 271402723).rotate90());
    assertEquals(new Board(4, 4, 60252), new Board(4, 4, 27837).rotate90());
    assertEquals(new Board(6, 6, 60806463878L), new Board(6, 6, 187632432).rotate90());
    assertEquals(new Board(7, 7, 214980395344472L), new Board(7, 7, 1614446135).rotate90());
    assertEquals(new Board(4, 4, 5878), new Board(4, 4, 42866).rotate90());
    assertEquals(new Board(2, 2, 12), new Board(2, 2, 10).rotate90());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).rotate90());
    assertEquals(new Board(3, 3, 18), new Board(3, 3, 24).rotate90());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).rotate90());
    assertEquals(new Board(5, 5, 30736321), new Board(5, 5, 30628822).rotate90());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).rotate90());
    assertEquals(new Board(6, 6, 442091531), new Board(6, 6, 1496405762).rotate90());
    assertEquals(new Board(3, 3, 311), new Board(3, 3, 95).rotate90());
    assertEquals(new Board(4, 4, 14145), new Board(4, 4, 56416).rotate90());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).rotate90());
    assertEquals(new Board(5, 5, 129047), new Board(5, 5, 9868421).rotate90());
    assertEquals(new Board(3, 3, 125), new Board(3, 3, 467).rotate90());
    assertEquals(new Board(4, 4, 44412), new Board(4, 4, 27261).rotate90());
    assertEquals(new Board(4, 4, 40870), new Board(4, 4, 51038).rotate90());
    assertEquals(new Board(7, 7, 213887326173244L), new Board(7, 7, 1379856310).rotate90());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).rotate90());
    assertEquals(new Board(6, 6, 13794156945L), new Board(6, 6, 1458209876).rotate90());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).rotate90());
    assertEquals(new Board(6, 6, 19544434195L), new Board(6, 6, 1701948104).rotate90());
  }

  @Test
  public void testRotate180() {
    assertEquals(new Board(2, 2, 5), new Board(2, 2, 10).rotate180());
    assertEquals(new Board(7, 6, 1598950637568L), new Board(7, 6, 85739706).rotate180());
    assertEquals(new Board(3, 3, 482), new Board(3, 3, 143).rotate180());
    assertEquals(new Board(5, 8, 376175571968L), new Board(5, 8, 770943466).rotate180());
    assertEquals(new Board(3, 3, 107), new Board(3, 3, 428).rotate180());
    assertEquals(new Board(6, 1, 6), new Board(6, 1, 24).rotate180());
    assertEquals(new Board(4, 8, 2810878672L), new Board(4, 8, 190403045).rotate180());
    assertEquals(new Board(4, 2, 244), new Board(4, 2, 47).rotate180());
    assertEquals(new Board(7, 1, 78), new Board(7, 1, 57).rotate180());
    assertEquals(new Board(1, 6, 15), new Board(1, 6, 60).rotate180());
    assertEquals(new Board(4, 3, 2096), new Board(4, 3, 193).rotate180());
    assertEquals(new Board(7, 1, 115), new Board(7, 1, 103).rotate180());
    assertEquals(new Board(4, 2, 151), new Board(4, 2, 233).rotate180());
    assertEquals(new Board(6, 2, 2594), new Board(6, 2, 1093).rotate180());
    assertEquals(new Board(4, 8, 4223253390L), new Board(4, 8, 1910349279).rotate180());
    assertEquals(new Board(3, 5, 12650), new Board(3, 5, 11078).rotate180());
    assertEquals(new Board(2, 2, 7), new Board(2, 2, 14).rotate180());
    assertEquals(new Board(3, 5, 3502), new Board(3, 5, 15064).rotate180());
    assertEquals(new Board(3, 6, 119965), new Board(3, 6, 189614).rotate180());
    assertEquals(new Board(2, 1, 1), new Board(2, 1, 2).rotate180());
    assertEquals(new Board(1, 2, 1), new Board(1, 2, 2).rotate180());
    assertEquals(new Board(5, 3, 7713), new Board(5, 3, 16956).rotate180());
    assertEquals(new Board(3, 6, 218319), new Board(3, 6, 249003).rotate180());
    assertEquals(new Board(6, 4, 11761556), new Board(6, 4, 2748109).rotate180());
    assertEquals(new Board(7, 2, 15378), new Board(7, 2, 4623).rotate180());
    assertEquals(new Board(1, 4, 2), new Board(1, 4, 4).rotate180());
    assertEquals(new Board(1, 4, 12), new Board(1, 4, 3).rotate180());
    assertEquals(new Board(8, 7, 41215771879145472L), new Board(8, 7, 1298249289).rotate180());
    assertEquals(new Board(1, 3, 7), new Board(1, 3, 7).rotate180());
    assertEquals(new Board(8, 4, 1244593574), new Board(8, 4, 1707045970).rotate180());
    assertEquals(new Board(4, 5, 420931), new Board(4, 5, 795494).rotate180());
    assertEquals(new Board(4, 1, 13), new Board(4, 1, 11).rotate180());
    assertEquals(new Board(8, 5, 250887243776L), new Board(8, 5, 298866268).rotate180());
    assertEquals(new Board(6, 1, 42), new Board(6, 1, 21).rotate180());
    assertEquals(new Board(1, 7, 41), new Board(1, 7, 74).rotate180());
    assertEquals(new Board(2, 7, 13234), new Board(2, 7, 4979).rotate180());
    assertEquals(new Board(2, 4, 152), new Board(2, 4, 25).rotate180());
    assertEquals(new Board(8, 3, 8407237), new Board(8, 3, 10686977).rotate180());
    assertEquals(new Board(7, 2, 12935), new Board(7, 2, 14419).rotate180());
    assertEquals(new Board(3, 6, 221873), new Board(3, 6, 144667).rotate180());
    assertEquals(new Board(3, 7, 21040), new Board(3, 7, 100672).rotate180());
    assertEquals(new Board(3, 4, 1910), new Board(3, 4, 1774).rotate180());
    assertEquals(new Board(7, 8, 67275151812591616L), new Board(7, 8, 1730560247).rotate180());
    assertEquals(new Board(8, 2, 24871), new Board(8, 2, 58502).rotate180());
    assertEquals(new Board(2, 8, 47337), new Board(2, 8, 38685).rotate180());
    assertEquals(new Board(8, 7, 50544046581481472L), new Board(8, 7, 1733396941).rotate180());
    assertEquals(new Board(6, 6, 41643931136L), new Board(6, 6, 117261529).rotate180());
    assertEquals(new Board(7, 3, 510372), new Board(7, 3, 307836).rotate180());
    assertEquals(new Board(1, 2, 1), new Board(1, 2, 2).rotate180());
    assertEquals(new Board(8, 1, 158), new Board(8, 1, 121).rotate180());
    assertEquals(new Board(8, 7, 31012038893371392L), new Board(8, 7, 1595061366).rotate180());
    assertEquals(new Board(2, 5, 454), new Board(2, 5, 398).rotate180());
    assertEquals(new Board(2, 6, 2532), new Board(2, 6, 633).rotate180());
    assertEquals(new Board(8, 2, 57986), new Board(8, 2, 16711).rotate180());
    assertEquals(new Board(6, 7, 2420891951104L), new Board(6, 7, 395859761).rotate180());
    assertEquals(new Board(2, 1, 3), new Board(2, 1, 3).rotate180());
    assertEquals(new Board(1, 2, 1), new Board(1, 2, 2).rotate180());
    assertEquals(new Board(2, 1, 3), new Board(2, 1, 3).rotate180());
    assertEquals(new Board(3, 6, 35947), new Board(3, 6, 219332).rotate180());
    assertEquals(new Board(5, 7, 5942908384L), new Board(5, 7, 1028448820).rotate180());
    assertEquals(new Board(3, 5, 7874), new Board(3, 5, 8636).rotate180());
    assertEquals(new Board(1, 5, 28), new Board(1, 5, 7).rotate180());
    assertEquals(new Board(4, 7, 46721217), new Board(4, 7, 137457972).rotate180());
    assertEquals(new Board(7, 5, 27211704368L), new Board(7, 5, 1621917011).rotate180());
    assertEquals(new Board(1, 2, 1), new Board(1, 2, 2).rotate180());
    assertEquals(new Board(5, 5, 21074240), new Board(5, 5, 332549).rotate180());
    assertEquals(new Board(8, 6, 124278250930176L), new Board(8, 6, 9691278).rotate180());
    assertEquals(new Board(8, 6, 167879983759360L), new Board(8, 6, 861533465).rotate180());
    assertEquals(new Board(3, 6, 81638), new Board(3, 6, 105970).rotate180());
    assertEquals(new Board(2, 1, 2), new Board(2, 1, 1).rotate180());
    assertEquals(new Board(8, 7, 55509967158902784L), new Board(8, 7, 1184918691).rotate180());
    assertEquals(new Board(1, 8, 125), new Board(1, 8, 190).rotate180());
    assertEquals(new Board(8, 6, 155168948879360L), new Board(8, 6, 677905585).rotate180());
    assertEquals(new Board(5, 7, 11349609824L), new Board(5, 7, 899019050).rotate180());
    assertEquals(new Board(1, 8, 208), new Board(1, 8, 11).rotate180());
    assertEquals(new Board(6, 8, 214954843832320L), new Board(6, 8, 952631747).rotate180());
    assertEquals(new Board(1, 3, 4), new Board(1, 3, 1).rotate180());
    assertEquals(new Board(1, 6, 23), new Board(1, 6, 58).rotate180());
    assertEquals(new Board(4, 3, 1577), new Board(4, 3, 2374).rotate180());
    assertEquals(new Board(3, 1, 2), new Board(3, 1, 2).rotate180());
    assertEquals(new Board(2, 7, 6300), new Board(2, 7, 3654).rotate180());
    assertEquals(new Board(5, 5, 13881619), new Board(5, 5, 26285974).rotate180());
    assertEquals(new Board(8, 4, 2571679966L), new Board(8, 4, 2065502873).rotate180());
    assertEquals(new Board(2, 6, 1360), new Board(2, 6, 170).rotate180());
    assertEquals(new Board(5, 4, 827127), new Board(5, 4, 980883).rotate180());
    assertEquals(new Board(1, 8, 225), new Board(1, 8, 135).rotate180());
    assertEquals(new Board(3, 5, 10877), new Board(3, 5, 24362).rotate180());
    assertEquals(new Board(1, 5, 3), new Board(1, 5, 24).rotate180());
    assertEquals(new Board(5, 8, 425113752576L), new Board(5, 8, 679698246).rotate180());
    assertEquals(new Board(3, 3, 210), new Board(3, 3, 150).rotate180());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).rotate180());
    assertEquals(new Board(6, 6, 35195311776L), new Board(6, 6, 1455110337).rotate180());
    assertEquals(new Board(8, 6, 261845166325760L), new Board(8, 6, 69837943).rotate180());
    assertEquals(new Board(2, 3, 54), new Board(2, 3, 27).rotate180());
    assertEquals(new Board(6, 7, 2145348534272L), new Board(6, 7, 217319230).rotate180());
    assertEquals(new Board(8, 4, 3101410240L), new Board(8, 4, 63167261).rotate180());
    assertEquals(new Board(4, 6, 3826614), new Board(4, 6, 7194204).rotate180());
    assertEquals(new Board(2, 3, 56), new Board(2, 3, 7).rotate180());
    assertEquals(new Board(3, 7, 53799), new Board(3, 7, 1870176).rotate180());
    assertEquals(new Board(8, 3, 10318768), new Board(8, 3, 904889).rotate180());
  }

  @Test
  public void testRotate270() {
    assertEquals(new Board(3, 3, 145), new Board(3, 3, 28).rotate270());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).rotate270());
    assertEquals(new Board(7, 7, 5091958506630L), new Board(7, 7, 1687202877).rotate270());
    assertEquals(new Board(7, 7, 136930834646148L), new Board(7, 7, 2008172199).rotate270());
    assertEquals(new Board(5, 5, 30339118), new Board(5, 5, 8117770).rotate270());
    assertEquals(new Board(7, 7, 92709582964225L), new Board(7, 7, 1472876353).rotate270());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).rotate270());
    assertEquals(new Board(7, 7, 106038200189445L), new Board(7, 7, 301827924).rotate270());
    assertEquals(new Board(4, 4, 35421), new Board(4, 4, 48172).rotate270());
    assertEquals(new Board(2, 2, 11), new Board(2, 2, 14).rotate270());
    assertEquals(new Board(5, 5, 20483674), new Board(5, 5, 28836775).rotate270());
    assertEquals(new Board(3, 3, 5), new Board(3, 3, 260).rotate270());
    assertEquals(new Board(5, 5, 2269307), new Board(5, 5, 17435450).rotate270());
    assertEquals(new Board(5, 5, 19676224), new Board(5, 5, 3346852).rotate270());
    assertEquals(new Board(2, 2, 15), new Board(2, 2, 15).rotate270());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).rotate270());
    assertEquals(new Board(2, 2, 2), new Board(2, 2, 8).rotate270());
    assertEquals(new Board(4, 4, 2115), new Board(4, 4, 9352).rotate270());
    assertEquals(new Board(3, 3, 112), new Board(3, 3, 145).rotate270());
    assertEquals(new Board(3, 3, 391), new Board(3, 3, 364).rotate270());
    assertEquals(new Board(3, 3, 368), new Board(3, 3, 209).rotate270());
    assertEquals(new Board(5, 5, 7291663), new Board(5, 5, 15552112).rotate270());
    assertEquals(new Board(5, 5, 1994131), new Board(5, 5, 23538325).rotate270());
    assertEquals(new Board(3, 3, 476), new Board(3, 3, 347).rotate270());
    assertEquals(new Board(4, 4, 12857), new Board(4, 4, 32893).rotate270());
    assertEquals(new Board(4, 4, 35377), new Board(4, 4, 12396).rotate270());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).rotate270());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).rotate270());
    assertEquals(new Board(4, 4, 14821), new Board(4, 4, 27739).rotate270());
    assertEquals(new Board(4, 4, 21975), new Board(4, 4, 20367).rotate270());
    assertEquals(new Board(4, 4, 54085), new Board(4, 4, 7467).rotate270());
    assertEquals(new Board(2, 2, 6), new Board(2, 2, 9).rotate270());
    assertEquals(new Board(2, 2, 7), new Board(2, 2, 11).rotate270());
    assertEquals(new Board(7, 7, 92637369664774L), new Board(7, 7, 399994885).rotate270());
    assertEquals(new Board(3, 3, 457), new Board(3, 3, 79).rotate270());
    assertEquals(new Board(7, 7, 57694033609988L), new Board(7, 7, 83220239).rotate270());
    assertEquals(new Board(2, 2, 10), new Board(2, 2, 12).rotate270());
    assertEquals(new Board(7, 7, 27151447442819L), new Board(7, 7, 1686435836).rotate270());
    assertEquals(new Board(2, 2, 4), new Board(2, 2, 1).rotate270());
    assertEquals(new Board(3, 3, 498), new Board(3, 3, 249).rotate270());
    assertEquals(new Board(6, 6, 57060888984L), new Board(6, 6, 1636390155).rotate270());
    assertEquals(new Board(4, 4, 42148), new Board(4, 4, 23120).rotate270());
    assertEquals(new Board(2, 2, 7), new Board(2, 2, 11).rotate270());
    assertEquals(new Board(4, 4, 63638), new Board(4, 4, 31125).rotate270());
    assertEquals(new Board(6, 6, 53946201758L), new Board(6, 6, 2113564362).rotate270());
    assertEquals(new Board(6, 6, 31209846419L), new Board(6, 6, 893697577).rotate270());
    assertEquals(new Board(3, 3, 117), new Board(3, 3, 405).rotate270());
    assertEquals(new Board(6, 6, 38807275479L), new Board(6, 6, 1883987250).rotate270());
    assertEquals(new Board(3, 3, 291), new Board(3, 3, 228).rotate270());
    assertEquals(new Board(3, 3, 34), new Board(3, 3, 160).rotate270());
    assertEquals(new Board(3, 3, 338), new Board(3, 3, 113).rotate270());
    assertEquals(new Board(3, 3, 69), new Board(3, 3, 261).rotate270());
    assertEquals(new Board(5, 5, 16664717), new Board(5, 5, 6941873).rotate270());
    assertEquals(new Board(6, 6, 50655680079L), new Board(6, 6, 1422842107).rotate270());
    assertEquals(new Board(5, 5, 33504150), new Board(5, 5, 28835553).rotate270());
    assertEquals(new Board(3, 3, 353), new Board(3, 3, 197).rotate270());
    assertEquals(new Board(3, 3, 161), new Board(3, 3, 140).rotate270());
    assertEquals(new Board(2, 2, 13), new Board(2, 2, 7).rotate270());
    assertEquals(new Board(4, 4, 50234), new Board(4, 4, 37828).rotate270());
    assertEquals(new Board(4, 4, 54766), new Board(4, 4, 57283).rotate270());
    assertEquals(new Board(4, 4, 26740), new Board(4, 4, 11604).rotate270());
    assertEquals(new Board(5, 5, 28952053), new Board(5, 5, 24437119).rotate270());
    assertEquals(new Board(5, 5, 2696794), new Board(5, 5, 27919204).rotate270());
    assertEquals(new Board(3, 3, 352), new Board(3, 3, 193).rotate270());
    assertEquals(new Board(3, 3, 332), new Board(3, 3, 323).rotate270());
    assertEquals(new Board(6, 6, 61426987930L), new Board(6, 6, 1842212367).rotate270());
    assertEquals(new Board(3, 3, 1), new Board(3, 3, 4).rotate270());
    assertEquals(new Board(4, 4, 39271), new Board(4, 4, 15563).rotate270());
    assertEquals(new Board(2, 2, 14), new Board(2, 2, 13).rotate270());
    assertEquals(new Board(2, 2, 5), new Board(2, 2, 3).rotate270());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).rotate270());
    assertEquals(new Board(7, 7, 48654469709957L), new Board(7, 7, 40961273).rotate270());
    assertEquals(new Board(5, 5, 29062657), new Board(5, 5, 15898741).rotate270());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).rotate270());
    assertEquals(new Board(7, 7, 115141630870157L), new Board(7, 7, 951880178).rotate270());
    assertEquals(new Board(4, 4, 10448), new Board(4, 4, 25620).rotate270());
    assertEquals(new Board(2, 2, 15), new Board(2, 2, 15).rotate270());
    assertEquals(new Board(3, 3, 268), new Board(3, 3, 322).rotate270());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).rotate270());
    assertEquals(new Board(5, 5, 5830728), new Board(5, 5, 6952323).rotate270());
    assertEquals(new Board(5, 5, 25269761), new Board(5, 5, 9474134).rotate270());
    assertEquals(new Board(6, 6, 51697222362L), new Board(6, 6, 1842875414).rotate270());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).rotate270());
    assertEquals(new Board(3, 3, 70), new Board(3, 3, 289).rotate270());
    assertEquals(new Board(4, 4, 32751), new Board(4, 4, 61435).rotate270());
    assertEquals(new Board(3, 3, 263), new Board(3, 3, 356).rotate270());
    assertEquals(new Board(4, 4, 36175), new Board(4, 4, 48778).rotate270());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).rotate270());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).rotate270());
    assertEquals(new Board(7, 7, 35325317711755L), new Board(7, 7, 263043172).rotate270());
    assertEquals(new Board(6, 6, 62682067416L), new Board(6, 6, 1671267932).rotate270());
    assertEquals(new Board(3, 3, 488), new Board(3, 3, 203).rotate270());
    assertEquals(new Board(4, 4, 46540), new Board(4, 4, 56851).rotate270());
    assertEquals(new Board(7, 7, 13336156619276L), new Board(7, 7, 1209699485).rotate270());
    assertEquals(new Board(4, 4, 59741), new Board(4, 4, 48414).rotate270());
    assertEquals(new Board(3, 3, 170), new Board(3, 3, 170).rotate270());
    assertEquals(new Board(6, 6, 8930473247L), new Board(6, 6, 914828076).rotate270());
    assertEquals(new Board(3, 3, 242), new Board(3, 3, 185).rotate270());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).rotate270());
    assertEquals(new Board(6, 6, 13107995532L), new Board(6, 6, 80688902).rotate270());
    assertEquals(new Board(5, 5, 20445752), new Board(5, 5, 31135979).rotate270());
  }

  @Test
  public void testFlipd1() {
    assertEquals(new Board(3, 3, 82), new Board(3, 3, 28).flipd1());
    assertEquals(new Board(7, 7, 30857488434206L), new Board(7, 7, 334721240).flipd1());
    assertEquals(new Board(3, 3, 238), new Board(3, 3, 238).flipd1());
    assertEquals(new Board(6, 6, 503845213), new Board(6, 6, 289748487).flipd1());
    assertEquals(new Board(6, 6, 2473445217L), new Board(6, 6, 1580756507).flipd1());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).flipd1());
    assertEquals(new Board(5, 5, 31728125), new Board(5, 5, 18861635).flipd1());
    assertEquals(new Board(6, 6, 31560311915L), new Board(6, 6, 1927676283).flipd1());
    assertEquals(new Board(2, 2, 10), new Board(2, 2, 12).flipd1());
    assertEquals(new Board(7, 7, 35288802101248L), new Board(7, 7, 679940656).flipd1());
    assertEquals(new Board(2, 2, 7), new Board(2, 2, 7).flipd1());
    assertEquals(new Board(4, 4, 60612), new Board(4, 4, 61312).flipd1());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).flipd1());
    assertEquals(new Board(2, 2, 13), new Board(2, 2, 11).flipd1());
    assertEquals(new Board(4, 4, 62307), new Board(4, 4, 35581).flipd1());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).flipd1());
    assertEquals(new Board(4, 4, 42930), new Board(4, 4, 42230).flipd1());
    assertEquals(new Board(5, 5, 19700655), new Board(5, 5, 27631275).flipd1());
    assertEquals(new Board(7, 7, 66351085587865L), new Board(7, 7, 1056126331).flipd1());
    assertEquals(new Board(5, 5, 12271730), new Board(5, 5, 14164850).flipd1());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).flipd1());
    assertEquals(new Board(4, 4, 63116), new Board(4, 4, 48584).flipd1());
    assertEquals(new Board(5, 5, 13137569), new Board(5, 5, 15357959).flipd1());
    assertEquals(new Board(2, 2, 8), new Board(2, 2, 8).flipd1());
    assertEquals(new Board(6, 6, 16429709300L), new Board(6, 6, 1602912182).flipd1());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).flipd1());
    assertEquals(new Board(4, 4, 454), new Board(4, 4, 8980).flipd1());
    assertEquals(new Board(5, 5, 2449083), new Board(5, 5, 7642023).flipd1());
    assertEquals(new Board(4, 4, 53846), new Board(4, 4, 35674).flipd1());
    assertEquals(new Board(4, 4, 61269), new Board(4, 4, 53191).flipd1());
    assertEquals(new Board(2, 2, 6), new Board(2, 2, 6).flipd1());
    assertEquals(new Board(4, 4, 50213), new Board(4, 4, 36129).flipd1());
    assertEquals(new Board(5, 5, 2031720), new Board(5, 5, 8692050).flipd1());
    assertEquals(new Board(7, 7, 39617346800031L), new Board(7, 7, 966938091).flipd1());
    assertEquals(new Board(6, 6, 21697229663L), new Board(6, 6, 760181079).flipd1());
    assertEquals(new Board(7, 7, 61643010918924L), new Board(7, 7, 1765211652).flipd1());
    assertEquals(new Board(3, 3, 462), new Board(3, 3, 366).flipd1());
    assertEquals(new Board(6, 6, 10153623940L), new Board(6, 6, 283226296).flipd1());
    assertEquals(new Board(7, 7, 446964352395L), new Board(7, 7, 1172833215).flipd1());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).flipd1());
    assertEquals(new Board(2, 2, 8), new Board(2, 2, 8).flipd1());
    assertEquals(new Board(2, 2, 1), new Board(2, 2, 1).flipd1());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).flipd1());
    assertEquals(new Board(3, 3, 427), new Board(3, 3, 427).flipd1());
    assertEquals(new Board(6, 6, 19347580693L), new Board(6, 6, 590919961).flipd1());
    assertEquals(new Board(2, 2, 9), new Board(2, 2, 9).flipd1());
    assertEquals(new Board(7, 7, 44086241347102L), new Board(7, 7, 442760356).flipd1());
    assertEquals(new Board(2, 2, 12), new Board(2, 2, 10).flipd1());
    assertEquals(new Board(3, 3, 467), new Board(3, 3, 317).flipd1());
    assertEquals(new Board(7, 7, 48654478377088L), new Board(7, 7, 1283860042).flipd1());
    assertEquals(new Board(4, 4, 48476), new Board(4, 4, 55182).flipd1());
    assertEquals(new Board(2, 2, 6), new Board(2, 2, 6).flipd1());
    assertEquals(new Board(6, 6, 31610164006L), new Board(6, 6, 1893462636).flipd1());
    assertEquals(new Board(4, 4, 10162), new Board(4, 4, 9462).flipd1());
    assertEquals(new Board(6, 6, 19502518403L), new Board(6, 6, 678481093).flipd1());
    assertEquals(new Board(5, 5, 7204758), new Board(5, 5, 16207788).flipd1());
    assertEquals(new Board(3, 3, 173), new Board(3, 3, 227).flipd1());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).flipd1());
    assertEquals(new Board(4, 4, 53585), new Board(4, 4, 35343).flipd1());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).flipd1());
    assertEquals(new Board(6, 6, 2641151479L), new Board(6, 6, 1534163675).flipd1());
    assertEquals(new Board(4, 4, 59039), new Board(4, 4, 48595).flipd1());
    assertEquals(new Board(4, 4, 13088), new Board(4, 4, 236).flipd1());
    assertEquals(new Board(7, 7, 17595426392325L), new Board(7, 7, 596984589).flipd1());
    assertEquals(new Board(2, 2, 4), new Board(2, 2, 2).flipd1());
    assertEquals(new Board(4, 4, 65362), new Board(4, 4, 52958).flipd1());
    assertEquals(new Board(2, 2, 3), new Board(2, 2, 5).flipd1());
    assertEquals(new Board(7, 7, 35287451469320L), new Board(7, 7, 148935200).flipd1());
    assertEquals(new Board(6, 6, 13307307162L), new Board(6, 6, 400966616).flipd1());
    assertEquals(new Board(4, 4, 32178), new Board(4, 4, 27838).flipd1());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).flipd1());
    assertEquals(new Board(6, 6, 7724627181L), new Board(6, 6, 1248287663).flipd1());
    assertEquals(new Board(6, 6, 26879280315L), new Board(6, 6, 1738818785).flipd1());
    assertEquals(new Board(2, 2, 7), new Board(2, 2, 7).flipd1());
    assertEquals(new Board(6, 6, 2200295137L), new Board(6, 6, 1178094751).flipd1());
    assertEquals(new Board(6, 6, 17706633085L), new Board(6, 6, 2138928155).flipd1());
    assertEquals(new Board(4, 4, 45722), new Board(4, 4, 45274).flipd1());
    assertEquals(new Board(6, 6, 24046285283L), new Board(6, 6, 2084710879).flipd1());
    assertEquals(new Board(2, 2, 15), new Board(2, 2, 15).flipd1());
    assertEquals(new Board(5, 5, 4161232), new Board(5, 5, 16137172).flipd1());
    assertEquals(new Board(3, 3, 489), new Board(3, 3, 423).flipd1());
    assertEquals(new Board(2, 2, 7), new Board(2, 2, 7).flipd1());
    assertEquals(new Board(3, 3, 18), new Board(3, 3, 24).flipd1());
    assertEquals(new Board(5, 5, 8324237), new Board(5, 5, 8711957).flipd1());
    assertEquals(new Board(5, 5, 18399560), new Board(5, 5, 29458520).flipd1());
    assertEquals(new Board(2, 2, 12), new Board(2, 2, 10).flipd1());
    assertEquals(new Board(2, 2, 10), new Board(2, 2, 12).flipd1());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).flipd1());
    assertEquals(new Board(5, 5, 12048587), new Board(5, 5, 5028857).flipd1());
    assertEquals(new Board(6, 6, 16634364836L), new Board(6, 6, 1491861176).flipd1());
    assertEquals(new Board(7, 7, 57453261719453L), new Board(7, 7, 527814467).flipd1());
    assertEquals(new Board(7, 7, 44153608552603L), new Board(7, 7, 1487741119).flipd1());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).flipd1());
    assertEquals(new Board(3, 3, 451), new Board(3, 3, 301).flipd1());
    assertEquals(new Board(5, 5, 29899257), new Board(5, 5, 26990787).flipd1());
    assertEquals(new Board(7, 7, 171815898380L), new Board(7, 7, 1642611488).flipd1());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).flipd1());
    assertEquals(new Board(4, 4, 48311), new Board(4, 4, 58811).flipd1());
    assertEquals(new Board(5, 5, 23677340), new Board(5, 5, 30527360).flipd1());
    assertEquals(new Board(5, 5, 19500144), new Board(5, 5, 26215374).flipd1());
    assertEquals(new Board(6, 6, 2621235814L), new Board(6, 6, 1350163274).flipd1());
  }

  @Test
  public void testFlipd2() {
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).flipd2());
    assertEquals(new Board(6, 6, 20140131078L), new Board(6, 6, 567361994).flipd2());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).flipd2());
    assertEquals(new Board(7, 7, 388287761622032L), new Board(7, 7, 1714637117).flipd2());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).flipd2());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).flipd2());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).flipd2());
    assertEquals(new Board(5, 5, 6729169), new Board(5, 5, 23506384).flipd2());
    assertEquals(new Board(6, 6, 32488564786L), new Board(6, 6, 756308464).flipd2());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).flipd2());
    assertEquals(new Board(3, 3, 103), new Board(3, 3, 358).flipd2());
    assertEquals(new Board(7, 7, 197529859006520L), new Board(7, 7, 959816630).flipd2());
    assertEquals(new Board(5, 5, 24213939), new Board(5, 5, 26981781).flipd2());
    assertEquals(new Board(4, 4, 267), new Board(4, 4, 43016).flipd2());
    assertEquals(new Board(4, 4, 22452), new Board(4, 4, 30388).flipd2());
    assertEquals(new Board(5, 5, 11363049), new Board(5, 5, 25535214).flipd2());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).flipd2());
    assertEquals(new Board(6, 6, 2962303016L), new Board(6, 6, 152175286).flipd2());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).flipd2());
    assertEquals(new Board(6, 6, 40805950102L), new Board(6, 6, 1035291137).flipd2());
    assertEquals(new Board(6, 6, 15148379696L), new Board(6, 6, 254664500).flipd2());
    assertEquals(new Board(6, 6, 45548094116L), new Board(6, 6, 329380261).flipd2());
    assertEquals(new Board(5, 5, 30382968), new Board(5, 5, 10952571).flipd2());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).flipd2());
    assertEquals(new Board(5, 5, 2465189), new Board(5, 5, 31715648).flipd2());
    assertEquals(new Board(2, 2, 11), new Board(2, 2, 11).flipd2());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).flipd2());
    assertEquals(new Board(2, 2, 7), new Board(2, 2, 14).flipd2());
    assertEquals(new Board(3, 3, 429), new Board(3, 3, 399).flipd2());
    assertEquals(new Board(5, 5, 10320117), new Board(5, 5, 26702070).flipd2());
    assertEquals(new Board(4, 4, 7957), new Board(4, 4, 62114).flipd2());
    assertEquals(new Board(3, 3, 250), new Board(3, 3, 250).flipd2());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).flipd2());
    assertEquals(new Board(4, 4, 21238), new Board(4, 4, 24276).flipd2());
    assertEquals(new Board(3, 3, 436), new Board(3, 3, 31).flipd2());
    assertEquals(new Board(6, 6, 59230473878L), new Board(6, 6, 2007330641).flipd2());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).flipd2());
    assertEquals(new Board(4, 4, 29596), new Board(4, 4, 29596).flipd2());
    assertEquals(new Board(4, 4, 1306), new Board(4, 4, 26664).flipd2());
    assertEquals(new Board(3, 3, 60), new Board(3, 3, 150).flipd2());
    assertEquals(new Board(7, 7, 89627411090472L), new Board(7, 7, 470475012).flipd2());
    assertEquals(new Board(3, 3, 166), new Board(3, 3, 46).flipd2());
    assertEquals(new Board(4, 4, 17087), new Board(4, 4, 52892).flipd2());
    assertEquals(new Board(4, 4, 41281), new Board(4, 4, 41281).flipd2());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).flipd2());
    assertEquals(new Board(7, 7, 123427815030888L), new Board(7, 7, 1541629008).flipd2());
    assertEquals(new Board(3, 3, 106), new Board(3, 3, 226).flipd2());
    assertEquals(new Board(2, 2, 15), new Board(2, 2, 15).flipd2());
    assertEquals(new Board(4, 4, 2464), new Board(4, 4, 9222).flipd2());
    assertEquals(new Board(4, 4, 38159), new Board(4, 4, 47273).flipd2());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).flipd2());
    assertEquals(new Board(4, 4, 38001), new Board(4, 4, 54369).flipd2());
    assertEquals(new Board(5, 5, 8227153), new Board(5, 5, 20415826).flipd2());
    assertEquals(new Board(4, 4, 22513), new Board(4, 4, 63092).flipd2());
    assertEquals(new Board(2, 2, 10), new Board(2, 2, 3).flipd2());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).flipd2());
    assertEquals(new Board(5, 5, 1369436), new Board(5, 5, 7619540).flipd2());
    assertEquals(new Board(5, 5, 14404198), new Board(5, 5, 12536878).flipd2());
    assertEquals(new Board(4, 4, 30064), new Board(4, 4, 30064).flipd2());
    assertEquals(new Board(6, 6, 49469859728L), new Board(6, 6, 424500237).flipd2());
    assertEquals(new Board(2, 2, 8), new Board(2, 2, 1).flipd2());
    assertEquals(new Board(5, 5, 21892731), new Board(5, 5, 30281307).flipd2());
    assertEquals(new Board(4, 4, 10303), new Board(4, 4, 52618).flipd2());
    assertEquals(new Board(7, 7, 56353344721016L), new Board(7, 7, 1508915546).flipd2());
    assertEquals(new Board(6, 6, 29734552764L), new Board(6, 6, 1371160418).flipd2());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).flipd2());
    assertEquals(new Board(4, 4, 56298), new Board(4, 4, 15967).flipd2());
    assertEquals(new Board(7, 7, 142807764180016L), new Board(7, 7, 643743616).flipd2());
    assertEquals(new Board(6, 6, 6318329472L), new Board(6, 6, 1410671774).flipd2());
    assertEquals(new Board(3, 3, 230), new Board(3, 3, 110).flipd2());
    assertEquals(new Board(3, 3, 214), new Board(3, 3, 124).flipd2());
    assertEquals(new Board(6, 6, 7361531810L), new Board(6, 6, 927794614).flipd2());
    assertEquals(new Board(6, 6, 16115600806L), new Board(6, 6, 1909756980).flipd2());
    assertEquals(new Board(2, 2, 11), new Board(2, 2, 11).flipd2());
    assertEquals(new Board(6, 6, 33930506174L), new Board(6, 6, 2146393466).flipd2());
    assertEquals(new Board(5, 5, 31832724), new Board(5, 5, 2356473).flipd2());
    assertEquals(new Board(5, 5, 11083231), new Board(5, 5, 22016818).flipd2());
    assertEquals(new Board(5, 5, 18552407), new Board(5, 5, 22894619).flipd2());
    assertEquals(new Board(2, 2, 6), new Board(2, 2, 6).flipd2());
    assertEquals(new Board(5, 5, 28652284), new Board(5, 5, 9827065).flipd2());
    assertEquals(new Board(5, 5, 52677), new Board(5, 5, 23486724).flipd2());
    assertEquals(new Board(2, 2, 13), new Board(2, 2, 13).flipd2());
    assertEquals(new Board(4, 4, 37813), new Board(4, 4, 63109).flipd2());
    assertEquals(new Board(2, 2, 10), new Board(2, 2, 3).flipd2());
    assertEquals(new Board(5, 5, 23770784), new Board(5, 5, 14728331).flipd2());
    assertEquals(new Board(7, 7, 301970579011680L), new Board(7, 7, 822655095).flipd2());
    assertEquals(new Board(7, 7, 107078081976352L), new Board(7, 7, 594247432).flipd2());
    assertEquals(new Board(2, 2, 8), new Board(2, 2, 1).flipd2());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).flipd2());
    assertEquals(new Board(5, 5, 19301882), new Board(5, 5, 15510353).flipd2());
    assertEquals(new Board(2, 2, 2), new Board(2, 2, 2).flipd2());
    assertEquals(new Board(7, 7, 387725104389176L), new Board(7, 7, 1866267161).flipd2());
    assertEquals(new Board(2, 2, 12), new Board(2, 2, 5).flipd2());
    assertEquals(new Board(2, 2, 14), new Board(2, 2, 7).flipd2());
    assertEquals(new Board(4, 4, 61212), new Board(4, 4, 25531).flipd2());
    assertEquals(new Board(4, 4, 13002), new Board(4, 4, 6988).flipd2());
    assertEquals(new Board(4, 4, 61613), new Board(4, 4, 38301).flipd2());
    assertEquals(new Board(7, 7, 196705408779312L), new Board(7, 7, 880125582).flipd2());
    assertEquals(new Board(2, 2, 1), new Board(2, 2, 8).flipd2());
    assertEquals(new Board(2, 2, 9), new Board(2, 2, 9).flipd2());
  }

  @Test
  public void testFliplr() {
    assertEquals(new Board(3, 3, 49), new Board(3, 3, 28).fliplr());
    assertEquals(new Board(2, 3, 28), new Board(2, 3, 49).fliplr());
    assertEquals(new Board(3, 2, 26), new Board(3, 2, 37).fliplr());
    assertEquals(new Board(1, 6, 46), new Board(1, 6, 29).fliplr());
    assertEquals(new Board(6, 7, 4540697575L), new Board(6, 7, 1257060979).fliplr());
    assertEquals(new Board(5, 6, 91483330), new Board(5, 6, 674888912).fliplr());
    assertEquals(new Board(5, 2, 449), new Board(5, 2, 706).fliplr());
    assertEquals(new Board(8, 1, 71), new Board(8, 1, 71).fliplr());
    assertEquals(new Board(5, 8, 2666937152L), new Board(5, 8, 2037373954).fliplr());
    assertEquals(new Board(8, 6, 103469572), new Board(8, 6, 408080648).fliplr());
    assertEquals(new Board(3, 5, 23561), new Board(3, 5, 29714).fliplr());
    assertEquals(new Board(2, 5, 437), new Board(2, 5, 725).fliplr());
    assertEquals(new Board(5, 1, 22), new Board(5, 1, 22).fliplr());
    assertEquals(new Board(1, 6, 52), new Board(1, 6, 11).fliplr());
    assertEquals(new Board(7, 6, 990025153), new Board(7, 6, 922902176).fliplr());
    assertEquals(new Board(1, 7, 56), new Board(1, 7, 14).fliplr());
    assertEquals(new Board(5, 3, 10962), new Board(5, 3, 11154).fliplr());
    assertEquals(new Board(8, 4, 196344743), new Board(8, 4, 232586590).fliplr());
    assertEquals(new Board(4, 8, 1015598039), new Board(4, 8, 1007801323).fliplr());
    assertEquals(new Board(2, 7, 4622), new Board(2, 7, 2360).fliplr());
    assertEquals(new Board(6, 2, 3430), new Board(6, 2, 3737).fliplr());
    assertEquals(new Board(3, 5, 20451), new Board(3, 5, 26616).fliplr());
    assertEquals(new Board(6, 4, 8832933), new Board(6, 4, 1457754).fliplr());
    assertEquals(new Board(3, 7, 966353), new Board(3, 7, 765893).fliplr());
    assertEquals(new Board(2, 5, 671), new Board(2, 5, 191).fliplr());
    assertEquals(new Board(7, 4, 146391429), new Board(7, 4, 31012890).fliplr());
    assertEquals(new Board(7, 3, 1596595), new Board(7, 3, 808606).fliplr());
    assertEquals(new Board(7, 7, 134546873), new Board(7, 7, 2438222).fliplr());
    assertEquals(new Board(1, 3, 2), new Board(1, 3, 2).fliplr());
    assertEquals(new Board(5, 8, 1823647027), new Board(5, 8, 911058380).fliplr());
    assertEquals(new Board(3, 3, 387), new Board(3, 3, 198).fliplr());
    assertEquals(new Board(7, 6, 447578990), new Board(7, 6, 383019805).fliplr());
    assertEquals(new Board(8, 2, 20970), new Board(8, 2, 41685).fliplr());
    assertEquals(new Board(2, 4, 9), new Board(2, 4, 9).fliplr());
    assertEquals(new Board(7, 7, 17346336812L), new Board(7, 7, 522289946).fliplr());
    assertEquals(new Board(6, 4, 12174415), new Board(6, 4, 14234159).fliplr());
    assertEquals(new Board(6, 3, 246212), new Board(6, 3, 233921).fliplr());
    assertEquals(new Board(5, 7, 4375902028L), new Board(5, 7, 1180327321).fliplr());
    assertEquals(new Board(8, 4, 1819598025), new Board(8, 4, 1675801401).fliplr());
    assertEquals(new Board(2, 1, 2), new Board(2, 1, 2).fliplr());
    assertEquals(new Board(6, 3, 247213), new Board(6, 3, 234733).fliplr());
    assertEquals(new Board(4, 8, 604723699), new Board(4, 8, 617650895).fliplr());
    assertEquals(new Board(1, 5, 15), new Board(1, 5, 30).fliplr());
    assertEquals(new Board(8, 1, 199), new Board(8, 1, 199).fliplr());
    assertEquals(new Board(2, 5, 443), new Board(2, 5, 731).fliplr());
    assertEquals(new Board(7, 7, 30290910252L), new Board(7, 7, 2104149786).fliplr());
    assertEquals(new Board(8, 2, 55202), new Board(8, 2, 60241).fliplr());
    assertEquals(new Board(4, 6, 5137395), new Board(4, 6, 13213491).fliplr());
    assertEquals(new Board(1, 1, 1), new Board(1, 1, 1).fliplr());
    assertEquals(new Board(2, 8, 46902), new Board(2, 8, 60780).fliplr());
    assertEquals(new Board(5, 6, 152412761), new Board(5, 6, 614557990).fliplr());
    assertEquals(new Board(1, 3, 2), new Board(1, 3, 2).fliplr());
    assertEquals(new Board(3, 4, 2936), new Board(3, 4, 3553).fliplr());
    assertEquals(new Board(6, 3, 197882), new Board(6, 3, 99770).fliplr());
    assertEquals(new Board(3, 2, 38), new Board(3, 2, 25).fliplr());
    assertEquals(new Board(5, 3, 3824), new Board(5, 3, 3992).fliplr());
    assertEquals(new Board(2, 2, 10), new Board(2, 2, 5).fliplr());
    assertEquals(new Board(7, 4, 191762303), new Board(7, 4, 224858095).fliplr());
    assertEquals(new Board(1, 6, 24), new Board(1, 6, 6).fliplr());
    assertEquals(new Board(2, 6, 3916), new Board(2, 6, 3020).fliplr());
    assertEquals(new Board(1, 8, 97), new Board(1, 8, 134).fliplr());
    assertEquals(new Board(2, 4, 116), new Board(2, 4, 226).fliplr());
    assertEquals(new Board(8, 5, 324993695), new Board(8, 5, 626491583).fliplr());
    assertEquals(new Board(1, 2, 1), new Board(1, 2, 2).fliplr());
    assertEquals(new Board(3, 8, 964798), new Board(3, 8, 7347581).fliplr());
    assertEquals(new Board(7, 2, 4075), new Board(7, 2, 4055).fliplr());
    assertEquals(new Board(6, 7, 30230855270L), new Board(6, 7, 2133004211).fliplr());
    assertEquals(new Board(5, 1, 13), new Board(5, 1, 13).fliplr());
    assertEquals(new Board(2, 3, 34), new Board(2, 3, 10).fliplr());
    assertEquals(new Board(1, 3, 3), new Board(1, 3, 6).fliplr());
    assertEquals(new Board(6, 2, 1134), new Board(6, 2, 2205).fliplr());
    assertEquals(new Board(7, 3, 927943), new Board(7, 3, 1614727).fliplr());
    assertEquals(new Board(3, 3, 142), new Board(3, 3, 163).fliplr());
    assertEquals(new Board(2, 5, 634), new Board(2, 5, 811).fliplr());
    assertEquals(new Board(2, 6, 581), new Board(2, 6, 2344).fliplr());
    assertEquals(new Board(1, 4, 5), new Board(1, 4, 10).fliplr());
    assertEquals(new Board(4, 5, 721134), new Board(4, 5, 426894).fliplr());
    assertEquals(new Board(3, 5, 829), new Board(3, 5, 631).fliplr());
    assertEquals(new Board(2, 8, 43861), new Board(2, 8, 54698).fliplr());
    assertEquals(new Board(1, 3, 7), new Board(1, 3, 7).fliplr());
    assertEquals(new Board(2, 7, 6442), new Board(2, 7, 4906).fliplr());
    assertEquals(new Board(7, 4, 100271062), new Board(7, 4, 183831734).fliplr());
    assertEquals(new Board(6, 4, 15909302), new Board(6, 4, 16005334).fliplr());
    assertEquals(new Board(3, 1, 4), new Board(3, 1, 4).fliplr());
    assertEquals(new Board(8, 2, 16615), new Board(8, 2, 32987).fliplr());
    assertEquals(new Board(8, 7, 8674678490L), new Board(8, 7, 558214445).fliplr());
    assertEquals(new Board(6, 5, 654713661), new Board(6, 5, 840108663).fliplr());
    assertEquals(new Board(4, 7, 218483993), new Board(4, 7, 24974924).fliplr());
    assertEquals(new Board(1, 3, 1), new Board(1, 3, 4).fliplr());
    assertEquals(new Board(5, 4, 203474), new Board(5, 4, 820660).fliplr());
    assertEquals(new Board(7, 4, 152455486), new Board(7, 4, 159787463).fliplr());
    assertEquals(new Board(1, 6, 51), new Board(1, 6, 51).fliplr());
    assertEquals(new Board(6, 3, 115190), new Board(6, 3, 201179).fliplr());
    assertEquals(new Board(3, 1, 7), new Board(3, 1, 7).fliplr());
    assertEquals(new Board(6, 1, 39), new Board(6, 1, 39).fliplr());
    assertEquals(new Board(3, 8, 2937010), new Board(3, 8, 3410765).fliplr());
    assertEquals(new Board(3, 2, 48), new Board(3, 2, 48).fliplr());
    assertEquals(new Board(6, 6, 35112643660L), new Board(6, 6, 1293781196).fliplr());
    assertEquals(new Board(6, 4, 3147895), new Board(6, 4, 12583406).fliplr());
    assertEquals(new Board(8, 5, 191385580), new Board(8, 5, 684779494).fliplr());
    assertEquals(new Board(2, 2, 13), new Board(2, 2, 14).fliplr());
    assertEquals(new Board(1, 7, 76), new Board(1, 7, 25).fliplr());
    assertEquals(new Board(4, 7, 12680232), new Board(4, 7, 101975946).fliplr());
  }

  @Test
  public void testFlipud() {
    assertEquals(new Board(3, 3, 280), new Board(3, 3, 28).flipud());
    assertEquals(new Board(2, 3, 12), new Board(2, 3, 33).flipud());
    assertEquals(new Board(3, 2, 22), new Board(3, 2, 37).flipud());
    assertEquals(new Board(8, 6, 103074593771520L), new Board(8, 6, 1672722135).flipud());
    assertEquals(new Board(2, 7, 6363), new Board(2, 7, 11697).flipud());
    assertEquals(new Board(2, 5, 955), new Board(2, 5, 893).flipud());
    assertEquals(new Board(5, 4, 406791), new Board(5, 4, 460086).flipud());
    assertEquals(new Board(8, 5, 557016293408L), new Board(8, 5, 1346789584).flipud());
    assertEquals(new Board(6, 6, 48273699969L), new Board(6, 6, 1384996716).flipud());
    assertEquals(new Board(1, 3, 3), new Board(1, 3, 3).flipud());
    assertEquals(new Board(4, 2, 79), new Board(4, 2, 241).flipud());
    assertEquals(new Board(3, 1, 5), new Board(3, 1, 5).flipud());
    assertEquals(new Board(1, 3, 5), new Board(1, 3, 5).flipud());
    assertEquals(new Board(8, 5, 601998691360L), new Board(8, 5, 1198477841).flipud());
    assertEquals(new Board(4, 8, 502523648), new Board(4, 8, 15201053).flipud());
    assertEquals(new Board(6, 4, 7171938), new Board(6, 4, 2553558).flipud());
    assertEquals(new Board(7, 6, 3017681395776L), new Board(7, 6, 2127675051).flipud());
    assertEquals(new Board(6, 6, 3143422657L), new Board(6, 6, 1261797058).flipud());
    assertEquals(new Board(8, 3, 6872160), new Board(8, 3, 1108563).flipud());
    assertEquals(new Board(2, 5, 835), new Board(2, 5, 122).flipud());
    assertEquals(new Board(7, 1, 5), new Board(7, 1, 80).flipud());
    assertEquals(new Board(8, 4, 2692105731L), new Board(8, 4, 811886346).flipud());
    assertEquals(new Board(5, 3, 26844), new Board(5, 3, 18150).flipud());
    assertEquals(new Board(7, 3, 1083978), new Board(7, 3, 563724).flipud());
    assertEquals(new Board(7, 8, 30934920188657664L), new Board(7, 8, 1629874029).flipud());
    assertEquals(new Board(1, 5, 25), new Board(1, 5, 25).flipud());
    assertEquals(new Board(3, 8, 7286365), new Board(3, 8, 6106735).flipud());
    assertEquals(new Board(2, 1, 2), new Board(2, 1, 1).flipud());
    assertEquals(new Board(8, 4, 345632643), new Board(8, 4, 956209473).flipud());
    assertEquals(new Board(6, 6, 25559234368L), new Board(6, 6, 498978007).flipud());
    assertEquals(new Board(6, 6, 55668857088L), new Board(6, 6, 617905587).flipud());
    assertEquals(new Board(4, 4, 5386), new Board(4, 4, 41041).flipud());
    assertEquals(new Board(4, 3, 190), new Board(4, 3, 3536).flipud());
    assertEquals(new Board(3, 6, 72179), new Board(3, 6, 211409).flipud());
    assertEquals(new Board(2, 4, 194), new Board(2, 4, 44).flipud());
    assertEquals(new Board(3, 3, 412), new Board(3, 3, 286).flipud());
    assertEquals(new Board(2, 2, 14), new Board(2, 2, 11).flipud());
    assertEquals(new Board(4, 1, 1), new Board(4, 1, 8).flipud());
    assertEquals(new Board(6, 8, 253842706792448L), new Board(6, 8, 1583144678).flipud());
    assertEquals(new Board(1, 4, 12), new Board(1, 4, 12).flipud());
    assertEquals(new Board(8, 7, 49540479869517824L), new Board(8, 7, 1537622104).flipud());
    assertEquals(new Board(3, 6, 84412), new Board(3, 6, 248212).flipud());
    assertEquals(new Board(7, 4, 197935990), new Board(7, 4, 108219595).flipud());
    assertEquals(new Board(5, 4, 130278), new Board(5, 4, 453873).flipud());
    assertEquals(new Board(7, 8, 15970587855814656L), new Board(7, 8, 1076542776).flipud());
    assertEquals(new Board(7, 5, 34201629536L), new Board(7, 5, 935536511).flipud());
    assertEquals(new Board(2, 3, 53), new Board(2, 3, 46).flipud());
    assertEquals(new Board(4, 4, 7693), new Board(4, 4, 53473).flipud());
    assertEquals(new Board(7, 5, 14646995264L), new Board(7, 5, 363283085).flipud());
    assertEquals(new Board(7, 6, 1718068543552L), new Board(7, 6, 1490829337).flipud());
    assertEquals(new Board(1, 2, 3), new Board(1, 2, 3).flipud());
    assertEquals(new Board(1, 3, 7), new Board(1, 3, 7).flipud());
    assertEquals(new Board(3, 3, 347), new Board(3, 3, 221).flipud());
    assertEquals(new Board(4, 8, 1462700596), new Board(4, 8, 873082711).flipud());
    assertEquals(new Board(7, 5, 24631739009L), new Board(7, 5, 1745521622).flipud());
    assertEquals(new Board(3, 8, 7170232), new Board(3, 8, 12085357).flipud());
    assertEquals(new Board(4, 7, 183385907), new Board(4, 7, 109026391).flipud());
    assertEquals(new Board(5, 3, 18498), new Board(5, 3, 8292).flipud());
    assertEquals(new Board(8, 4, 2305159121L), new Board(8, 4, 503207576).flipud());
    assertEquals(new Board(7, 8, 60985358938013696L), new Board(7, 8, 1625074136).flipud());
    assertEquals(new Board(7, 1, 79), new Board(7, 1, 121).flipud());
    assertEquals(new Board(5, 6, 485468107), new Board(5, 6, 192917212).flipud());
    assertEquals(new Board(6, 8, 50033369612288L), new Board(6, 8, 961380653).flipud());
    assertEquals(new Board(3, 1, 5), new Board(3, 1, 5).flipud());
    assertEquals(new Board(1, 5, 28), new Board(1, 5, 28).flipud());
    assertEquals(new Board(4, 7, 268059060), new Board(4, 7, 109114623).flipud());
    assertEquals(new Board(4, 4, 22538), new Board(4, 4, 41093).flipud());
    assertEquals(new Board(3, 8, 7503241), new Board(3, 8, 9010546).flipud());
    assertEquals(new Board(4, 8, 3160975220L), new Board(4, 8, 1957128380).flipud());
    assertEquals(new Board(7, 2, 11654), new Board(7, 2, 9374).flipud());
    assertEquals(new Board(2, 6, 2354), new Board(2, 6, 3236).flipud());
    assertEquals(new Board(8, 4, 1264694582), new Board(8, 4, 1666913972).flipud());
    assertEquals(new Board(3, 7, 628442), new Board(3, 7, 1480358).flipud());
    assertEquals(new Board(3, 8, 9744413), new Board(3, 8, 1945748).flipud());
    assertEquals(new Board(5, 8, 500689076480L), new Board(5, 8, 23434100).flipud());
    assertEquals(new Board(7, 8, 44245105778884608L), new Board(7, 8, 1974481053).flipud());
    assertEquals(new Board(2, 7, 4027), new Board(2, 7, 7583).flipud());
    assertEquals(new Board(6, 3, 248788), new Board(6, 3, 143207).flipud());
    assertEquals(new Board(5, 8, 903656770048L), new Board(5, 8, 170157778).flipud());
    assertEquals(new Board(5, 8, 564993148928L), new Board(5, 8, 1211600003).flipud());
    assertEquals(new Board(1, 3, 7), new Board(1, 3, 7).flipud());
    assertEquals(new Board(2, 5, 372), new Board(2, 5, 651).flipud());
    assertEquals(new Board(6, 5, 158250216), new Board(6, 5, 276231876).flipud());
    assertEquals(new Board(5, 6, 993226853), new Board(5, 6, 621245243).flipud());
    assertEquals(new Board(5, 8, 966359911168L), new Board(5, 8, 193658848).flipud());
    assertEquals(new Board(1, 2, 3), new Board(1, 2, 3).flipud());
    assertEquals(new Board(5, 8, 619601793536L), new Board(5, 8, 304432016).flipud());
    assertEquals(new Board(4, 5, 956860), new Board(4, 5, 931037).flipud());
    assertEquals(new Board(2, 5, 895), new Board(2, 5, 1019).flipud());
    assertEquals(new Board(8, 2, 37848), new Board(8, 2, 10182).flipud());
    assertEquals(new Board(5, 7, 10576423424L), new Board(5, 7, 176642471).flipud());
    assertEquals(new Board(8, 7, 53639434513416192L), new Board(8, 7, 270946911).flipud());
    assertEquals(new Board(7, 6, 887279226944L), new Board(7, 6, 1777688204).flipud());
    assertEquals(new Board(7, 2, 11748), new Board(7, 2, 1758).flipud());
    assertEquals(new Board(4, 3, 2761), new Board(4, 3, 605).flipud());
    assertEquals(new Board(7, 8, 32096549676777472L), new Board(7, 8, 1386481522).flipud());
    assertEquals(new Board(6, 7, 3170352742912L), new Board(6, 7, 1341083996).flipud());
    assertEquals(new Board(2, 8, 28986), new Board(2, 8, 14961).flipud());
    assertEquals(new Board(1, 8, 69), new Board(1, 8, 69).flipud());
    assertEquals(new Board(5, 5, 26111102), new Board(5, 5, 31584152).flipud());
    assertEquals(new Board(6, 1, 43), new Board(6, 1, 53).flipud());
    assertEquals(new Board(8, 5, 847868353536L), new Board(8, 5, 780620472).flipud());
    assertEquals(new Board(6, 1, 39), new Board(6, 1, 57).flipud());
  }

  @Test
  public void testIsFree() {
    Board b = new Board(3, 4, 1);
    assertFalse(b.isFree(0, 0));
    assertTrue(b.isFree(1, 0));
  }

  @Test
  public void testIsSet() {
    Board b = new Board(3, 4, 1);
    assertTrue(b.isSet(0, 0));
    assertFalse(b.isSet(1, 0));
  }

  @Test
  public void testClearAll() {
    Board b = new Board(3, 4, 1);
    assertTrue(b.isSet(0, 0));
    b.clear(0, 0);
    assertTrue(b.isFree(0, 0));
  }

  @Test
  public void testSet() {
    assertEquals(new Board(2, 2, 4), new Board(2, 2).set(0, 1));
    assertEquals(new Board(7, 8, 17179869184L), new Board(7, 8).set(2, 4));
    assertEquals(new Board(2, 5, 256), new Board(2, 5).set(3, 1));
    assertEquals(new Board(1, 8, 4), new Board(1, 8).set(2, 0));
    assertEquals(new Board(4, 3, 2), new Board(4, 3).set(1, 0));
    assertEquals(new Board(5, 5, 8388608), new Board(5, 5).set(3, 4));
    assertEquals(new Board(2, 7, 128), new Board(2, 7).set(0, 1));
    assertEquals(new Board(1, 6, 2), new Board(1, 6).set(1, 0));
    assertEquals(new Board(8, 6, 524288), new Board(8, 6).set(1, 3));
    assertEquals(new Board(3, 3, 8), new Board(3, 3).set(0, 1));
    assertEquals(new Board(1, 6, 1), new Board(1, 6).set(0, 0));
    assertEquals(new Board(8, 7, 65536), new Board(8, 7).set(2, 2));
    assertEquals(new Board(1, 4, 8), new Board(1, 4).set(3, 0));
    assertEquals(new Board(6, 8, 35184372088832L), new Board(6, 8).set(5, 5));
    assertEquals(new Board(3, 2, 4), new Board(3, 2).set(0, 1));
    assertEquals(new Board(8, 1, 128), new Board(8, 1).set(0, 7));
    assertEquals(new Board(8, 5, 32768), new Board(8, 5).set(0, 3));
    assertEquals(new Board(7, 3, 128), new Board(7, 3).set(1, 2));
    assertEquals(new Board(8, 4, 4), new Board(8, 4).set(2, 0));
    assertEquals(new Board(3, 8, 1), new Board(3, 8).set(0, 0));
    assertEquals(new Board(3, 7, 8192), new Board(3, 7).set(6, 1));
    assertEquals(new Board(7, 5, 2097152), new Board(7, 5).set(1, 4));
    assertEquals(new Board(7, 2, 64), new Board(7, 2).set(0, 3));
    assertEquals(new Board(7, 6, 65536), new Board(7, 6).set(4, 2));
    assertEquals(new Board(1, 3, 4), new Board(1, 3).set(2, 0));
    assertEquals(new Board(4, 1, 1), new Board(4, 1).set(0, 0));
    assertEquals(new Board(7, 8, 140737488355328L), new Board(7, 8).set(7, 5));
    assertEquals(new Board(7, 2, 1), new Board(7, 2).set(0, 0));
    assertEquals(new Board(7, 3, 1048576), new Board(7, 3).set(2, 6));
    assertEquals(new Board(7, 4, 32), new Board(7, 4).set(1, 1));
    assertEquals(new Board(1, 8, 16), new Board(1, 8).set(4, 0));
    assertEquals(new Board(6, 7, 65536), new Board(6, 7).set(2, 2));
    assertEquals(new Board(1, 4, 2), new Board(1, 4).set(1, 0));
    assertEquals(new Board(8, 6, 2147483648L), new Board(8, 6).set(1, 5));
    assertEquals(new Board(1, 2, 1), new Board(1, 2).set(0, 0));
    assertEquals(new Board(3, 2, 2), new Board(3, 2).set(1, 0));
    assertEquals(new Board(7, 2, 8192), new Board(7, 2).set(1, 6));
    assertEquals(new Board(4, 7, 262144), new Board(4, 7).set(4, 2));
    assertEquals(new Board(2, 7, 16), new Board(2, 7).set(4, 0));
    assertEquals(new Board(8, 5, 1), new Board(8, 5).set(0, 0));
    assertEquals(new Board(4, 2, 128), new Board(4, 2).set(1, 3));
    assertEquals(new Board(5, 1, 8), new Board(5, 1).set(0, 3));
    assertEquals(new Board(3, 2, 8), new Board(3, 2).set(1, 1));
    assertEquals(new Board(7, 3, 262144), new Board(7, 3).set(0, 6));
    assertEquals(new Board(5, 5, 2097152), new Board(5, 5).set(1, 4));
    assertEquals(new Board(5, 8, 16777216), new Board(5, 8).set(0, 3));
    assertEquals(new Board(6, 8, 8192), new Board(6, 8).set(5, 1));
    assertEquals(new Board(8, 5, 16777216), new Board(8, 5).set(4, 4));
    assertEquals(new Board(5, 2, 8), new Board(5, 2).set(1, 1));
    assertEquals(new Board(8, 1, 1), new Board(8, 1).set(0, 0));
    assertEquals(new Board(1, 2, 1), new Board(1, 2).set(0, 0));
    assertEquals(new Board(5, 6, 8192), new Board(5, 6).set(1, 2));
    assertEquals(new Board(4, 7, 8388608), new Board(4, 7).set(2, 3));
    assertEquals(new Board(3, 1, 2), new Board(3, 1).set(0, 1));
    assertEquals(new Board(5, 2, 64), new Board(5, 2).set(0, 3));
    assertEquals(new Board(8, 1, 4), new Board(8, 1).set(0, 2));
    assertEquals(new Board(4, 1, 8), new Board(4, 1).set(0, 3));
    assertEquals(new Board(3, 5, 1), new Board(3, 5).set(0, 0));
    assertEquals(new Board(1, 6, 4), new Board(1, 6).set(2, 0));
    assertEquals(new Board(5, 6, 536870912), new Board(5, 6).set(5, 4));
    assertEquals(new Board(1, 5, 4), new Board(1, 5).set(2, 0));
    assertEquals(new Board(3, 3, 128), new Board(3, 3).set(1, 2));
    assertEquals(new Board(7, 2, 64), new Board(7, 2).set(0, 3));
    assertEquals(new Board(5, 7, 17179869184L), new Board(5, 7).set(6, 4));
    assertEquals(new Board(6, 6, 32), new Board(6, 6).set(5, 0));
    assertEquals(new Board(3, 4, 256), new Board(3, 4).set(0, 2));
    assertEquals(new Board(5, 1, 1), new Board(5, 1).set(0, 0));
    assertEquals(new Board(3, 7, 16), new Board(3, 7).set(4, 0));
    assertEquals(new Board(5, 4, 8192), new Board(5, 4).set(1, 3));
    assertEquals(new Board(2, 4, 4), new Board(2, 4).set(2, 0));
    assertEquals(new Board(6, 8, 512), new Board(6, 8).set(1, 1));
    assertEquals(new Board(8, 3, 32), new Board(8, 3).set(2, 1));
    assertEquals(new Board(6, 8, 8388608), new Board(6, 8).set(7, 2));
    assertEquals(new Board(5, 2, 128), new Board(5, 2).set(1, 3));
    assertEquals(new Board(4, 2, 128), new Board(4, 2).set(1, 3));
    assertEquals(new Board(6, 1, 1), new Board(6, 1).set(0, 0));
    assertEquals(new Board(3, 1, 1), new Board(3, 1).set(0, 0));
    assertEquals(new Board(1, 2, 1), new Board(1, 2).set(0, 0));
    assertEquals(new Board(4, 6, 4), new Board(4, 6).set(2, 0));
    assertEquals(new Board(5, 7, 4), new Board(5, 7).set(2, 0));
    assertEquals(new Board(1, 7, 4), new Board(1, 7).set(2, 0));
    assertEquals(new Board(3, 2, 16), new Board(3, 2).set(0, 2));
    assertEquals(new Board(3, 8, 8388608), new Board(3, 8).set(7, 2));
    assertEquals(new Board(5, 1, 4), new Board(5, 1).set(0, 2));
    assertEquals(new Board(1, 5, 16), new Board(1, 5).set(4, 0));
    assertEquals(new Board(1, 3, 1), new Board(1, 3).set(0, 0));
    assertEquals(new Board(2, 3, 16), new Board(2, 3).set(1, 1));
    assertEquals(new Board(8, 3, 1024), new Board(8, 3).set(1, 3));
    assertEquals(new Board(4, 1, 1), new Board(4, 1).set(0, 0));
    assertEquals(new Board(6, 8, 1073741824), new Board(6, 8).set(6, 3));
    assertEquals(new Board(6, 3, 8), new Board(6, 3).set(0, 1));
    assertEquals(new Board(4, 7, 16777216), new Board(4, 7).set(3, 3));
    assertEquals(new Board(6, 6, 32), new Board(6, 6).set(5, 0));
    assertEquals(new Board(5, 6, 131072), new Board(5, 6).set(5, 2));
    assertEquals(new Board(7, 6, 2048), new Board(7, 6).set(5, 1));
    assertEquals(new Board(4, 6, 8388608), new Board(4, 6).set(5, 3));
    assertEquals(new Board(8, 3, 16384), new Board(8, 3).set(2, 4));
    assertEquals(new Board(1, 5, 16), new Board(1, 5).set(4, 0));
    assertEquals(new Board(4, 6, 4194304), new Board(4, 6).set(4, 3));
    assertEquals(new Board(6, 1, 16), new Board(6, 1).set(0, 4));
  }

  @Test
  public void testIsEmpty() {
    Board b = new Board(6, 3);
    assertTrue(b.isEmpty());
    b.set(0, 0);
    assertFalse(b.isEmpty());
  }

  @Test
  public void testFillAll() {
    Board b = new Board(4, 5);
    assertTrue(b.isEmpty());
    b.fill();
    assertFalse(b.isEmpty());
    assertEquals(b.val, 1048575);
  }

  @Test
  public void testRowCounts() {
    assertArrayEquals(new int[] {2, 5, 5, 2, 5, 7, 7}, new Board(7, 7, 1583452375).rowCounts());
    assertArrayEquals(new int[] {1, 1, 2}, new Board(3, 2, 6).rowCounts());
    assertArrayEquals(new int[] {5, 5, 3}, new Board(3, 7, 1372228).rowCounts());
    assertArrayEquals(new int[] {3, 3}, new Board(2, 6, 853).rowCounts());
    assertArrayEquals(new int[] {3, 4}, new Board(2, 6, 436).rowCounts());
    assertArrayEquals(new int[] {2, 1, 1, 1, 1, 2, 0, 1}, new Board(8, 2, 29076).rowCounts());
    assertArrayEquals(new int[] {1, 1, 2, 3, 2, 2}, new Board(6, 4, 3950039).rowCounts());
    assertArrayEquals(new int[] {4, 2, 2, 4}, new Board(4, 7, 16477908).rowCounts());
    assertArrayEquals(new int[] {0, 0, 0, 1, 1, 0, 1}, new Board(7, 1, 39).rowCounts());
    assertArrayEquals(new int[] {6}, new Board(1, 7, 16).rowCounts());
    assertArrayEquals(new int[] {5, 3, 1, 5, 8, 8, 8}, new Board(7, 8, 366992453).rowCounts());
    assertArrayEquals(new int[] {1, 1, 2, 1, 1, 1}, new Board(6, 2, 1674).rowCounts());
    assertArrayEquals(new int[] {2, 5, 3, 5, 8}, new Board(5, 8, 452117723).rowCounts());
    assertArrayEquals(new int[] {5}, new Board(1, 7, 40).rowCounts());
    assertArrayEquals(new int[] {4, 3, 1, 4, 5, 6, 6}, new Board(7, 6, 143111945).rowCounts());
    assertArrayEquals(new int[] {5, 2, 3, 4, 8}, new Board(5, 8, 665300944).rowCounts());
    assertArrayEquals(new int[] {0, 0}, new Board(2, 1, 3).rowCounts());
    assertArrayEquals(new int[] {5, 5, 5, 4, 6, 7}, new Board(6, 7, 742724116).rowCounts());
    assertArrayEquals(new int[] {4, 6, 6, 4, 5, 7, 7}, new Board(7, 7, 1495539747).rowCounts());
    assertArrayEquals(new int[] {3, 6, 3}, new Board(3, 8, 11968627).rowCounts());
    assertArrayEquals(new int[] {0, 3, 3, 2}, new Board(4, 4, 49439).rowCounts());
    assertArrayEquals(new int[] {5}, new Board(1, 8, 146).rowCounts());
    assertArrayEquals(new int[] {4, 3}, new Board(2, 6, 482).rowCounts());
    assertArrayEquals(new int[] {2, 4, 2, 2}, new Board(4, 5, 749717).rowCounts());
    assertArrayEquals(new int[] {4, 4}, new Board(2, 7, 4946).rowCounts());
    assertArrayEquals(new int[] {4, 5, 6, 2, 3, 6}, new Board(6, 6, 844890629).rowCounts());
    assertArrayEquals(new int[] {1, 0, 1, 1, 1, 0, 1}, new Board(7, 1, 34).rowCounts());
    assertArrayEquals(new int[] {1, 0, 1, 0}, new Board(4, 1, 10).rowCounts());
    assertArrayEquals(new int[] {4, 6, 5, 5, 8, 8, 8}, new Board(7, 8, 1162414506).rowCounts());
    assertArrayEquals(new int[] {0, 1, 1, 1, 1}, new Board(5, 1, 1).rowCounts());
    assertArrayEquals(new int[] {5, 3, 4, 7, 8, 8}, new Board(6, 8, 549874481).rowCounts());
    assertArrayEquals(new int[] {3, 4}, new Board(2, 5, 536).rowCounts());
    assertArrayEquals(new int[] {2, 3, 3}, new Board(3, 4, 2118).rowCounts());
    assertArrayEquals(new int[] {5, 3, 5, 4, 3, 5, 6}, new Board(7, 6, 1196033376).rowCounts());
    assertArrayEquals(new int[] {4, 5}, new Board(2, 8, 49636).rowCounts());
    assertArrayEquals(new int[] {5, 5, 3, 4, 8}, new Board(5, 8, 1454279722).rowCounts());
    assertArrayEquals(new int[] {2, 2, 4, 2}, new Board(4, 5, 822108).rowCounts());
    assertArrayEquals(new int[] {0}, new Board(1, 1, 1).rowCounts());
    assertArrayEquals(new int[] {0, 1, 1, 1, 0, 1, 0, 1}, new Board(8, 1, 81).rowCounts());
    assertArrayEquals(new int[] {3, 3, 3}, new Board(3, 5, 9322).rowCounts());
    assertArrayEquals(new int[] {1, 1, 1, 1, 1, 0, 1}, new Board(7, 1, 32).rowCounts());
    assertArrayEquals(new int[] {1, 2, 4, 3, 3}, new Board(5, 5, 5554910).rowCounts());
    assertArrayEquals(new int[] {3, 1}, new Board(2, 3, 40).rowCounts());
    assertArrayEquals(new int[] {2, 2, 3, 3, 6, 7}, new Board(6, 7, 659151838).rowCounts());
    assertArrayEquals(new int[] {3, 3, 2}, new Board(3, 6, 210282).rowCounts());
    assertArrayEquals(new int[] {1, 1, 1, 2, 0, 1}, new Board(6, 2, 2854).rowCounts());
    assertArrayEquals(new int[] {3, 1, 2, 2, 2, 2, 1, 3}, new Board(8, 4, 460101332).rowCounts());
    assertArrayEquals(new int[] {3, 0, 0, 0, 1, 2, 1, 1}, new Board(8, 3, 11419640).rowCounts());
    assertArrayEquals(new int[] {3, 4, 1, 3, 5, 7, 7, 7}, new Board(8, 7, 932693775).rowCounts());
    assertArrayEquals(new int[] {2, 4, 1, 3}, new Board(4, 5, 683164).rowCounts());
    assertArrayEquals(new int[] {1}, new Board(1, 5, 30).rowCounts());
    assertArrayEquals(new int[] {4, 6, 1, 5, 8, 8, 8}, new Board(7, 8, 1643856244).rowCounts());
    assertArrayEquals(new int[] {3, 1, 4, 2, 2}, new Board(5, 5, 11897332).rowCounts());
    assertArrayEquals(new int[] {2, 4}, new Board(2, 5, 534).rowCounts());
    assertArrayEquals(new int[] {4, 5, 4}, new Board(3, 8, 7521000).rowCounts());
    assertArrayEquals(new int[] {5, 3, 3, 2}, new Board(4, 7, 242166465).rowCounts());
    assertArrayEquals(new int[] {2, 4, 5}, new Board(3, 6, 5661).rowCounts());
    assertArrayEquals(new int[] {0, 2, 1, 2, 1, 1, 1, 2}, new Board(8, 3, 10171223).rowCounts());
    assertArrayEquals(new int[] {0, 3, 2, 2, 2, 2}, new Board(6, 4, 13280655).rowCounts());
    assertArrayEquals(new int[] {2, 1, 1, 1, 1, 0, 0, 1}, new Board(8, 2, 32360).rowCounts());
    assertArrayEquals(new int[] {1, 1, 0, 2, 3, 3}, new Board(6, 5, 815234939).rowCounts());
    assertArrayEquals(new int[] {5, 2, 3}, new Board(3, 7, 449417).rowCounts());
    assertArrayEquals(new int[] {1, 1, 2, 1, 1, 1, 1, 1}, new Board(8, 2, 26953).rowCounts());
    assertArrayEquals(new int[] {1, 1, 0, 1, 0, 1}, new Board(6, 1, 20).rowCounts());
    assertArrayEquals(new int[] {3, 3}, new Board(2, 5, 777).rowCounts());
    assertArrayEquals(new int[] {0}, new Board(1, 1, 1).rowCounts());
    assertArrayEquals(new int[] {0, 1, 3, 3, 1, 2}, new Board(6, 3, 151607).rowCounts());
    assertArrayEquals(new int[] {3, 1, 5, 4}, new Board(4, 6, 12595110).rowCounts());
    assertArrayEquals(new int[] {3, 0, 4}, new Board(3, 6, 53212).rowCounts());
    assertArrayEquals(new int[] {4, 3, 2, 3, 2, 6}, new Board(6, 6, 395760344).rowCounts());
    assertArrayEquals(new int[] {1, 1, 1, 2, 3, 3}, new Board(6, 4, 4480493).rowCounts());
    assertArrayEquals(new int[] {2, 2, 2, 3, 2, 2}, new Board(6, 4, 6915525).rowCounts());
    assertArrayEquals(new int[] {3}, new Board(1, 5, 6).rowCounts());
    assertArrayEquals(new int[] {0, 1, 2, 1, 2}, new Board(5, 2, 71).rowCounts());
    assertArrayEquals(new int[] {2, 1, 2, 1, 1}, new Board(5, 3, 14937).rowCounts());
    assertArrayEquals(new int[] {1, 1, 2, 0}, new Board(4, 5, 1023741).rowCounts());
    assertArrayEquals(new int[] {0}, new Board(1, 1, 1).rowCounts());
    assertArrayEquals(new int[] {1, 1, 0}, new Board(3, 1, 4).rowCounts());
    assertArrayEquals(new int[] {3, 2, 2, 3}, new Board(4, 5, 349798).rowCounts());
    assertArrayEquals(new int[] {2, 5, 2, 2, 6, 7, 7, 7}, new Board(8, 7, 666608175).rowCounts());
    assertArrayEquals(new int[] {3, 4, 3, 2}, new Board(4, 7, 231183687).rowCounts());
    assertArrayEquals(new int[] {2, 2}, new Board(2, 6, 3445).rowCounts());
    assertArrayEquals(new int[] {3, 2}, new Board(2, 4, 152).rowCounts());
    assertArrayEquals(new int[] {2, 2, 2, 2, 1, 2}, new Board(6, 4, 13093577).rowCounts());
    assertArrayEquals(new int[] {3, 3, 1, 3, 1, 4, 2, 1}, new Board(8, 4, 2047679873).rowCounts());
    assertArrayEquals(new int[] {1, 2, 3, 3, 2, 2, 1, 2}, new Board(8, 4, 1835436235).rowCounts());
    assertArrayEquals(new int[] {0}, new Board(1, 1, 1).rowCounts());
    assertArrayEquals(new int[] {4, 5, 5, 4, 6}, new Board(5, 7, 561007683).rowCounts());
    assertArrayEquals(new int[] {1, 0, 0}, new Board(3, 1, 6).rowCounts());
    assertArrayEquals(new int[] {4, 3, 3, 5, 8, 8}, new Board(6, 8, 198621605).rowCounts());
    assertArrayEquals(new int[] {0, 1, 0}, new Board(3, 1, 5).rowCounts());
    assertArrayEquals(new int[] {4, 4, 1, 3, 5, 7, 7}, new Board(7, 7, 1457494628).rowCounts());
    assertArrayEquals(new int[] {4}, new Board(1, 7, 28).rowCounts());
    assertArrayEquals(new int[] {3, 1}, new Board(2, 5, 492).rowCounts());
    assertArrayEquals(new int[] {1, 1, 2, 2, 2}, new Board(5, 2, 6).rowCounts());
    assertArrayEquals(new int[] {2}, new Board(1, 7, 121).rowCounts());
    assertArrayEquals(new int[] {1, 1, 1, 1, 1, 0, 1}, new Board(7, 1, 32).rowCounts());
    assertArrayEquals(new int[] {3, 4, 3, 3, 5, 7}, new Board(6, 7, 1725129962).rowCounts());
    assertArrayEquals(new int[] {3, 1, 6, 2, 6, 7, 7}, new Board(7, 7, 766000058).rowCounts());
    assertArrayEquals(new int[] {5, 5, 4, 3, 8, 8}, new Board(6, 8, 2031862882).rowCounts());
  }

  @Test
  public void testColCounts() {
    assertArrayEquals(new int[] {7}, new Board(8, 1, 4).colCounts());
    assertArrayEquals(new int[] {0, 1, 0, 1}, new Board(1, 4, 5).colCounts());
    assertArrayEquals(new int[] {0, 2, 2, 1, 2, 2, 0}, new Board(3, 7, 1272297).colCounts());
    assertArrayEquals(new int[] {1, 3, 5, 4, 4, 4}, new Board(6, 6, 1849996513).colCounts());
    assertArrayEquals(new int[] {1, 0, 1, 0}, new Board(1, 4, 10).colCounts());
    assertArrayEquals(new int[] {5}, new Board(7, 1, 5).colCounts());
    assertArrayEquals(new int[] {1, 1, 1, 0}, new Board(2, 4, 203).colCounts());
    assertArrayEquals(new int[] {2, 1, 0, 2}, new Board(3, 4, 1150).colCounts());
    assertArrayEquals(new int[] {1, 1, 1, 0}, new Board(2, 4, 233).colCounts());
    assertArrayEquals(new int[] {2, 4}, new Board(5, 2, 89).colCounts());
    assertArrayEquals(new int[] {1, 2, 1}, new Board(2, 3, 12).colCounts());
    assertArrayEquals(new int[] {4}, new Board(5, 1, 4).colCounts());
    assertArrayEquals(new int[] {2, 2, 3, 3, 5, 3, 4, 5}, new Board(5, 8, 721774346).colCounts());
    assertArrayEquals(new int[] {1, 2, 2, 2, 3, 4, 2, 3}, new Board(4, 8, 165101838).colCounts());
    assertArrayEquals(new int[] {2, 4, 5, 5, 3, 3, 3}, new Board(6, 7, 1582199249).colCounts());
    assertArrayEquals(new int[] {3}, new Board(6, 1, 14).colCounts());
    assertArrayEquals(new int[] {2, 1, 2, 0}, new Board(3, 4, 3738).colCounts());
    assertArrayEquals(new int[] {2, 0, 1, 3, 2, 0}, new Board(4, 6, 15366583).colCounts());
    assertArrayEquals(new int[] {2, 3}, new Board(4, 2, 19).colCounts());
    assertArrayEquals(new int[] {1}, new Board(6, 1, 55).colCounts());
    assertArrayEquals(new int[] {0}, new Board(1, 1, 1).colCounts());
    assertArrayEquals(new int[] {0, 0, 0, 1, 1, 1, 1}, new Board(1, 7, 7).colCounts());
    assertArrayEquals(new int[] {2, 2}, new Board(3, 2, 36).colCounts());
    assertArrayEquals(new int[] {2, 2, 2, 1}, new Board(2, 4, 8).colCounts());
    assertArrayEquals(new int[] {1, 2, 3, 4, 3, 3, 1}, new Board(4, 7, 149964899).colCounts());
    assertArrayEquals(new int[] {4, 2, 2}, new Board(6, 3, 222150).colCounts());
    assertArrayEquals(new int[] {3, 3, 3}, new Board(6, 3, 163394).colCounts());
    assertArrayEquals(new int[] {2, 3, 1, 2, 1, 2, 2, 2}, new Board(3, 8, 16519428).colCounts());
    assertArrayEquals(new int[] {1, 1, 3, 2, 2, 3, 2, 2}, new Board(4, 8, 1124769777).colCounts());
    assertArrayEquals(new int[] {1, 1, 0, 1}, new Board(1, 4, 4).colCounts());
    assertArrayEquals(new int[] {3, 2, 2, 2, 2, 1, 0, 1}, new Board(3, 8, 14868572).colCounts());
    assertArrayEquals(new int[] {4, 5, 5, 7, 7}, new Board(8, 5, 238818373).colCounts());
    assertArrayEquals(new int[] {0, 3, 1, 1}, new Board(4, 4, 40407).colCounts());
    assertArrayEquals(new int[] {5}, new Board(6, 1, 4).colCounts());
    assertArrayEquals(new int[] {5, 5, 4, 4, 4, 4, 5, 6}, new Board(7, 8, 762576412).colCounts());
    assertArrayEquals(new int[] {4, 3, 2, 3, 4}, new Board(6, 5, 153368829).colCounts());
    assertArrayEquals(new int[] {5, 4, 2}, new Board(6, 3, 190848).colCounts());
    assertArrayEquals(new int[] {0, 0, 1, 1}, new Board(1, 4, 3).colCounts());
    assertArrayEquals(new int[] {2, 3}, new Board(6, 2, 949).colCounts());
    assertArrayEquals(new int[] {2, 3, 2, 3, 2, 1}, new Board(3, 6, 196897).colCounts());
    assertArrayEquals(new int[] {1, 2, 2, 3, 2, 1, 1, 1}, new Board(3, 8, 15787777).colCounts());
    assertArrayEquals(new int[] {4, 6, 5, 7, 3, 6}, new Board(8, 6, 1350517879).colCounts());
    assertArrayEquals(new int[] {2, 3, 4, 6, 4}, new Board(6, 5, 777520226).colCounts());
    assertArrayEquals(new int[] {3, 6, 4, 2}, new Board(7, 4, 228492433).colCounts());
    assertArrayEquals(new int[] {4, 1, 3, 3}, new Board(5, 4, 440838).colCounts());
    assertArrayEquals(new int[] {4, 6, 6, 7, 6, 4}, new Board(8, 6, 1674979672).colCounts());
    assertArrayEquals(new int[] {1, 2, 1, 1, 1, 0, 2, 2}, new Board(2, 8, 14373).colCounts());
    assertArrayEquals(new int[] {6, 4, 4, 5, 4, 4, 5, 3}, new Board(6, 8, 8699634).colCounts());
    assertArrayEquals(new int[] {1, 2, 1, 2, 3, 1}, new Board(3, 6, 194565).colCounts());
    assertArrayEquals(new int[] {2, 0, 4, 3}, new Board(5, 4, 173883).colCounts());
    assertArrayEquals(new int[] {5, 4, 5, 3, 1, 4}, new Board(6, 6, 1388570136).colCounts());
    assertArrayEquals(new int[] {6, 6, 3, 6, 4, 5, 4, 6}, new Board(7, 8, 1299453174).colCounts());
    assertArrayEquals(new int[] {6, 6, 6, 7, 5, 7, 7}, new Board(8, 7, 1658988720).colCounts());
    assertArrayEquals(new int[] {5, 6, 5, 5, 4, 4, 6, 6}, new Board(7, 8, 918054169).colCounts());
    assertArrayEquals(new int[] {2}, new Board(5, 1, 11).colCounts());
    assertArrayEquals(new int[] {7, 4, 5, 5, 4, 4, 5, 7}, new Board(7, 8, 443704892).colCounts());
    assertArrayEquals(new int[] {0, 0, 1, 0, 0, 1, 1, 0}, new Board(1, 8, 155).colCounts());
    assertArrayEquals(new int[] {0}, new Board(1, 1, 1).colCounts());
    assertArrayEquals(new int[] {2, 2, 4, 3}, new Board(5, 4, 234374).colCounts());
    assertArrayEquals(new int[] {4, 2, 3, 0, 3}, new Board(5, 5, 10774974).colCounts());
    assertArrayEquals(new int[] {1, 0, 1, 2, 2}, new Board(3, 5, 2303).colCounts());
    assertArrayEquals(new int[] {4, 5, 5, 4, 6, 6, 5, 6}, new Board(7, 8, 1552640773).colCounts());
    assertArrayEquals(new int[] {1, 1}, new Board(4, 2, 252).colCounts());
    assertArrayEquals(new int[] {2, 0, 2, 3, 2, 2, 2}, new Board(3, 7, 835910).colCounts());
    assertArrayEquals(new int[] {2, 2, 2}, new Board(3, 3, 448).colCounts());
    assertArrayEquals(new int[] {4, 2}, new Board(7, 2, 14572).colCounts());
    assertArrayEquals(new int[] {0, 0, 1, 2, 0, 2, 1, 1}, new Board(2, 8, 21399).colCounts());
    assertArrayEquals(new int[] {2, 0, 1, 2, 0, 2, 1, 1}, new Board(3, 8, 6010582).colCounts());
    assertArrayEquals(new int[] {3, 3, 4, 3, 3, 4}, new Board(5, 6, 755609616).colCounts());
    assertArrayEquals(new int[] {1, 1, 2, 0}, new Board(2, 4, 184).colCounts());
    assertArrayEquals(new int[] {2, 0}, new Board(2, 2, 10).colCounts());
    assertArrayEquals(new int[] {4, 4, 6, 4, 6, 6, 5, 6}, new Board(7, 8, 189387311).colCounts());
    assertArrayEquals(new int[] {4, 4, 4, 5, 5, 5, 4, 6}, new Board(7, 8, 527885643).colCounts());
    assertArrayEquals(new int[] {0}, new Board(1, 1, 1).colCounts());
    assertArrayEquals(new int[] {2, 4, 1, 1, 1, 2}, new Board(5, 6, 1035409308).colCounts());
    assertArrayEquals(new int[] {1}, new Board(4, 1, 11).colCounts());
    assertArrayEquals(new int[] {1, 4, 2}, new Board(4, 3, 2636).colCounts());
    assertArrayEquals(new int[] {1, 2, 1, 1, 1, 2}, new Board(2, 6, 848).colCounts());
    assertArrayEquals(new int[] {1}, new Board(5, 1, 27).colCounts());
    assertArrayEquals(new int[] {1}, new Board(2, 1, 1).colCounts());
    assertArrayEquals(new int[] {0, 1, 1}, new Board(2, 3, 43).colCounts());
    assertArrayEquals(new int[] {0}, new Board(1, 1, 1).colCounts());
    assertArrayEquals(new int[] {4, 2, 2, 1, 4, 1, 1, 4}, new Board(4, 8, 1282287714).colCounts());
    assertArrayEquals(new int[] {3, 2}, new Board(4, 2, 35).colCounts());
    assertArrayEquals(new int[] {3, 4, 3, 4, 4}, new Board(6, 5, 680724417).colCounts());
    assertArrayEquals(new int[] {1, 1, 1, 0, 1, 0, 1, 0}, new Board(1, 8, 168).colCounts());
    assertArrayEquals(new int[] {0, 0, 1, 0, 0, 1, 1, 1}, new Board(1, 8, 27).colCounts());
    assertArrayEquals(new int[] {3, 5, 3, 4}, new Board(7, 4, 48334293).colCounts());
    assertArrayEquals(new int[] {3, 3, 4}, new Board(8, 3, 16459341).colCounts());
    assertArrayEquals(new int[] {0, 1, 1, 2, 1, 1, 1}, new Board(3, 7, 883151).colCounts());
    assertArrayEquals(new int[] {5, 5, 3, 6, 3}, new Board(7, 5, 1756053653).colCounts());
    assertArrayEquals(new int[] {1}, new Board(2, 1, 2).colCounts());
    assertArrayEquals(new int[] {0, 1, 1, 0}, new Board(1, 4, 9).colCounts());
    assertArrayEquals(new int[] {6, 5, 7, 8, 6, 6}, new Board(8, 6, 806105268).colCounts());
    assertArrayEquals(new int[] {5, 4, 6, 4, 3, 6}, new Board(8, 6, 2120976087).colCounts());
    assertArrayEquals(new int[] {0, 0, 1}, new Board(1, 3, 3).colCounts());
    assertArrayEquals(new int[] {3, 3, 3, 3}, new Board(8, 4, 1530056445).colCounts());
    assertArrayEquals(new int[] {3, 5, 4, 4, 3, 5, 3, 4}, new Board(5, 8, 356548697).colCounts());
    assertArrayEquals(new int[] {1, 1, 1, 2, 2}, new Board(2, 5, 69).colCounts());
    assertArrayEquals(new int[] {5, 4}, new Board(7, 2, 2609).colCounts());
  }

  @Test
  public void testNormalize() {
    assertEquals(new Board(3, 1, 3), new Board(3, 1, 3).normalize());
    assertEquals(new Board(1, 7, 63), new Board(1, 7, 125).normalize());
    assertEquals(new Board(8, 5, 7847423), new Board(8, 5, 728784887).normalize());
    assertEquals(new Board(5, 6, 18659231), new Board(5, 6, 928727347).normalize());
    assertEquals(new Board(5, 3, 9055), new Board(5, 3, 20061).normalize());
    assertEquals(new Board(7, 8, 50813231), new Board(7, 8, 184796843).normalize());
    assertEquals(new Board(6, 1, 7), new Board(6, 1, 49).normalize());
    assertEquals(new Board(6, 4, 266809), new Board(6, 4, 10575912).normalize());
    assertEquals(new Board(5, 8, 285718639), new Board(5, 8, 1129344952).normalize());
    assertEquals(new Board(3, 1, 3), new Board(3, 1, 6).normalize());
    assertEquals(new Board(6, 1, 7), new Board(6, 1, 19).normalize());
    assertEquals(new Board(7, 6, 1683592879), new Board(7, 6, 1253252383).normalize());
    assertEquals(new Board(7, 2, 607), new Board(7, 2, 9421).normalize());
    assertEquals(new Board(6, 7, 3274758631L), new Board(6, 7, 853286521).normalize());
    assertEquals(new Board(2, 3, 11), new Board(2, 3, 50).normalize());
    assertEquals(new Board(4, 7, 12733371), new Board(4, 7, 248543378).normalize());
    assertEquals(new Board(5, 6, 86610407), new Board(5, 6, 606063889).normalize());
    assertEquals(new Board(1, 4, 7), new Board(1, 4, 7).normalize());
    assertEquals(new Board(3, 8, 2826039), new Board(3, 8, 6216348).normalize());
    assertEquals(new Board(8, 5, 211463975), new Board(8, 5, 496841912).normalize());
    assertEquals(new Board(3, 6, 16591), new Board(3, 6, 119820).normalize());
    assertEquals(new Board(2, 5, 7), new Board(2, 5, 672).normalize());
    assertEquals(new Board(3, 8, 593463), new Board(3, 8, 14713959).normalize());
    assertEquals(new Board(3, 2, 31), new Board(3, 2, 59).normalize());
    assertEquals(new Board(3, 8, 473981), new Board(3, 8, 8640990).normalize());
    assertEquals(new Board(6, 1, 15), new Board(6, 1, 60).normalize());
    assertEquals(new Board(3, 5, 3309), new Board(3, 5, 25914).normalize());
    assertEquals(new Board(7, 4, 140876671), new Board(7, 4, 55237883).normalize());
    assertEquals(new Board(7, 1, 3), new Board(7, 1, 9).normalize());
    assertEquals(new Board(6, 2, 367), new Board(6, 2, 1507).normalize());
    assertEquals(new Board(7, 7, 824565759), new Board(7, 7, 1879025442).normalize());
    assertEquals(new Board(8, 2, 10591), new Board(8, 2, 21179).normalize());
    assertEquals(new Board(3, 3, 15), new Board(3, 3, 39).normalize());
    assertEquals(new Board(4, 1, 3), new Board(4, 1, 12).normalize());
    assertEquals(new Board(8, 7, 816744371), new Board(8, 7, 1585499109).normalize());
    assertEquals(new Board(8, 5, 1495908271), new Board(8, 5, 1886615421).normalize());
    assertEquals(new Board(2, 3, 11), new Board(2, 3, 25).normalize());
    assertEquals(new Board(4, 7, 27689871), new Board(4, 7, 205056291).normalize());
    assertEquals(new Board(8, 5, 1146202809), new Board(8, 5, 1178783129).normalize());
    assertEquals(new Board(1, 4, 3), new Board(1, 4, 5).normalize());
    assertEquals(new Board(2, 6, 727), new Board(2, 6, 1882).normalize());
    assertEquals(new Board(4, 1, 7), new Board(4, 1, 14).normalize());
    assertEquals(new Board(4, 8, 53089743), new Board(4, 8, 1626754083).normalize());
    assertEquals(new Board(8, 2, 26367), new Board(8, 2, 56190).normalize());
    assertEquals(new Board(4, 3, 669), new Board(4, 3, 3284).normalize());
    assertEquals(new Board(1, 4, 7), new Board(1, 4, 11).normalize());
    assertEquals(new Board(2, 8, 18239), new Board(2, 8, 50039).normalize());
    assertEquals(new Board(6, 2, 351), new Board(6, 2, 3165).normalize());
    assertEquals(new Board(4, 6, 841211), new Board(4, 6, 6528909).normalize());
    assertEquals(new Board(5, 3, 7519), new Board(5, 3, 28267).normalize());
    assertEquals(new Board(4, 2, 1), new Board(4, 2, 1).normalize());
    assertEquals(new Board(8, 5, 9608443), new Board(8, 5, 778055018).normalize());
    assertEquals(new Board(7, 1, 15), new Board(7, 1, 83).normalize());
    assertEquals(new Board(1, 5, 3), new Board(1, 5, 9).normalize());
    assertEquals(new Board(8, 2, 22207), new Board(8, 2, 61109).normalize());
    assertEquals(new Board(8, 5, 1210443223), new Board(8, 5, 1915238231).normalize());
    assertEquals(new Board(2, 6, 1263), new Board(2, 6, 1847).normalize());
    assertEquals(new Board(7, 8, 2302070647L), new Board(7, 8, 1015278462).normalize());
    assertEquals(new Board(7, 5, 1209112951), new Board(7, 5, 1987168769).normalize());
    assertEquals(new Board(5, 8, 319782255), new Board(5, 8, 1259600619).normalize());
    assertEquals(new Board(7, 6, 42293135), new Board(7, 6, 66251908).normalize());
    assertEquals(new Board(2, 5, 101), new Board(2, 5, 300).normalize());
    assertEquals(new Board(5, 1, 15), new Board(5, 1, 29).normalize());
    assertEquals(new Board(6, 2, 9), new Board(6, 2, 2112).normalize());
    assertEquals(new Board(6, 4, 6503), new Board(6, 4, 5963937).normalize());
    assertEquals(new Board(7, 2, 2455), new Board(7, 2, 4718).normalize());
    assertEquals(new Board(4, 7, 53054415), new Board(4, 7, 74698285).normalize());
    assertEquals(new Board(6, 7, 293722457), new Board(6, 7, 352543601).normalize());
    assertEquals(new Board(4, 1, 15), new Board(4, 1, 15).normalize());
    assertEquals(new Board(2, 1, 3), new Board(2, 1, 3).normalize());
    assertEquals(new Board(5, 1, 15), new Board(5, 1, 29).normalize());
    assertEquals(new Board(7, 1, 3), new Board(7, 1, 36).normalize());
    assertEquals(new Board(5, 6, 573865567), new Board(5, 6, 936100435).normalize());
    assertEquals(new Board(2, 7, 397), new Board(2, 7, 9478).normalize());
    assertEquals(new Board(8, 3, 321455), new Board(8, 3, 7727416).normalize());
    assertEquals(new Board(8, 4, 35036539), new Board(8, 4, 246619352).normalize());
    assertEquals(new Board(1, 3, 3), new Board(1, 3, 3).normalize());
    assertEquals(new Board(3, 2, 7), new Board(3, 2, 7).normalize());
    assertEquals(new Board(2, 2, 7), new Board(2, 2, 13).normalize());
    assertEquals(new Board(7, 3, 345950), new Board(7, 3, 681869).normalize());
    assertEquals(new Board(5, 3, 7067), new Board(5, 3, 15254).normalize());
    assertEquals(new Board(8, 2, 27007), new Board(8, 2, 28375).normalize());
    assertEquals(new Board(5, 6, 875968223), new Board(5, 6, 653640441).normalize());
    assertEquals(new Board(7, 8, 286077774), new Board(7, 8, 1905086492).normalize());
    assertEquals(new Board(3, 2, 27), new Board(3, 2, 27).normalize());
    assertEquals(new Board(7, 4, 1192927), new Board(7, 4, 32637907).normalize());
    assertEquals(new Board(8, 7, 1651561661), new Board(8, 7, 885242580).normalize());
    assertEquals(new Board(1, 3, 7), new Board(1, 3, 7).normalize());
    assertEquals(new Board(5, 5, 4992247), new Board(5, 5, 30775833).normalize());
    assertEquals(new Board(8, 4, 289827711), new Board(8, 4, 292250751).normalize());
    assertEquals(new Board(3, 8, 8879999), new Board(3, 8, 16513957).normalize());
    assertEquals(new Board(2, 3, 3), new Board(2, 3, 24).normalize());
    assertEquals(new Board(6, 3, 4863), new Board(6, 3, 69335).normalize());
    assertEquals(new Board(8, 5, 1218794747), new Board(8, 5, 1148576541).normalize());
    assertEquals(new Board(6, 7, 606193625), new Board(6, 7, 566564709).normalize());
    assertEquals(new Board(5, 7, 563103911), new Board(5, 7, 350429458).normalize());
    assertEquals(new Board(1, 3, 1), new Board(1, 3, 4).normalize());
    assertEquals(new Board(6, 5, 6403755), new Board(6, 5, 123896277).normalize());
    assertEquals(new Board(6, 6, 17113991), new Board(6, 6, 1098057024).normalize());
    assertEquals(new Board(5, 2, 3), new Board(5, 2, 3).normalize());
  }

  @Test
  public void testToGraph() {
    Graph<Integer, SimpleEdge> g = new SimpleGraph<>(SimpleEdge.class);
    g.addVertex(5);
    g.addVertex(8);
    g.addVertex(7);
    g.addVertex(6);
    g.addEdge(5, 8);
    g.addEdge(7, 8);
    g.addEdge(6, 7);
    Board b = new Board(3, 3, 30);
    assertEquals(b.toGraph(), g);
  }

  @Test
  public void testSwap() {
    Board b = new Board(2, 3);
    b.set(0, 0);
    b.swap(0, 0, 0, 1);
    assertEquals(b.val, 8);
  }

  @Test
  public void testFill() {
    Board b = new Board(3, 7);
    int val = 0;
    int count = 0;
    for (int j = 0; j < b.h; j++) {
      for (int i = 0; i < b.w; i++) {
        b.set(i, j);
        val += 1 << count++;
        assertEquals(b.val, val);
      }
    }
  }

  @Test
  public void testClear() {
    Board b = new Board(4, 6);
    b.fill();
    int val = (int) Math.pow(2, b.h * b.w) - 1;
    int count = 0;
    for (int j = 0; j < b.h; j++) {
      for (int i = 0; i < b.w; i++) {
        b.clear(i, j);
        val -= 1 << count++;
        assertEquals(b.val, val);
      }
    }
  }
}
